var ready = require('./auth')
var mixin = require('../common/mixin')
var noop = function () {}
var win = typeof window !== 'undefined' ? window : {}
var Promise = win.Promise || require('pinkie')
var wx = function () {
  return window.wx || ( function (ref) {
    var fail = ref.fail; if ( fail === void 0 ) fail = noop;

    return fail({error: -1, msg: 'wx sdk is not loaded'});
  } )
}

/**
 * 微信官方文档
 * http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html#.E6.A6.82.E8.BF.B0
 * **/

/** constants **/
var WECHAT_FRIENDS = 'WCF'
var WECHAT_TIMELINE = 'WCT'
var QQ = 'QQ'
var QZONE = 'QZONE'
/** constants **/

function uploadImages (localIds) {
  var ids = localIds.concat()
  var photos = []
  return new Promise(function (resolve, reject) {
    function uploadSingleImage () {
      var localId = ids.shift()
      if (!localId) resolve(photos)
      wx().uploadImage({
        localId: localId,
        success: function (photo) {
          photos.push(photo)
          uploadSingleImage()
        },
        fail: reject
      })
    }
    uploadSingleImage()
  })
}

var KNB = {
  use: function (name, options) {
    if (KNB[name] && !KNB[name].NOTIMPLEMENTED) return KNB[name](options)
    if (wx()[name]) wx()[name](options)
  },

  getUA: require('../common/get-ua'),

  isApiSupported: function (ref) {
    var apiName = ref.apiName;
    var success = ref.success; if ( success === void 0 ) success = noop;

    return success(!!(KNB[apiName] && !KNB[apiName].NOTIMPLEMENTED))
  },
  previewImage: function (config) { return wx().previewImage(config); },
  // 建议只用count
  chooseImage: function (ref) {
    var count = ref.count;
    var success = ref.success; if ( success === void 0 ) success = noop;
    var fail = ref.fail; if ( fail === void 0 ) fail = noop;

    wx().chooseImage({
      count: count,
      success: function (res) {
        success({
          photoInfos: res.localIds.map(function (id) { return ({localId: id}); })
        })
      },
    fail: fail})
  },
  uploadImage: function (config) {
    var localIds = config.localIds; if ( localIds === void 0 ) localIds = [];
    var success = config.success; if ( success === void 0 ) success = noop;
    var fail = config.fail; if ( fail === void 0 ) fail = noop;

    uploadImages(localIds)
      .then(function (photos) {
        success({
          photoInfos: photos.map(function (photo) { return mixin(photo, {picUrl: photo.serverId, picKey: photo.serverId}); }
          )
        })
      })
      .catch(fail)
  },
  downloadImage: function (config) { return wx().downloadImage(config); },

  getNetworkType: function (config) { return wx().getNetworkType(config); },
  closeWindow: function (config) { return wx().closeWindow(config); },

  // constants
  share: {
    WECHAT_FRIENDS: WECHAT_FRIENDS,
    WECHAT_TIMELINE: WECHAT_TIMELINE,
    QQ: QQ,
  QZONE: QZONE},

  // share
  // mapping from
  // [knb api]
  //   title:"分享标题",
  //   desc:"分享描述",
  //   image:"http://www.dpfile.com/toevent/img/16d05c85a71b135edc39d197273746d6.png",
  //   url:"http://m.dianping.com",
  //   channel: [KNB.share.WECHAT_FRIENDS,KNB.share.WECHAT_TIMELINE],
  // to
  // [wx api]
  //   title: '', // 分享标题
  //   desc: '', //分享描述
  //   link: '', // 分享链接
  //   imgUrl: '', // 分享图标
  configShare: function (ref) {
    var title = ref.title;
    var desc = ref.desc; if ( desc === void 0 ) desc = '';
    var image = ref.image; if ( image === void 0 ) image = '';
    var url = ref.url; if ( url === void 0 ) url = '';
    var channel = ref.channel; if ( channel === void 0 ) channel = [WECHAT_FRIENDS, WECHAT_TIMELINE, QQ, QZONE];
    var success = ref.success; if ( success === void 0 ) success = noop;
    var fail = ref.fail; if ( fail === void 0 ) fail = noop;

    channel
      .map(function (c) {
        switch (c) {
          case KNB.share.WECHAT_FRIENDS:
            return function (x) { return wx().onMenuShareAppMessage(x); }
          case KNB.share.WECHAT_TIMELINE:
            return function (x) { return wx().onMenuShareTimeline(x); }
          case KNB.share.QQ:
            return function (x) { return wx().onMenuShareQQ(x); }
          case KNB.share.QZONE:
            return function (x) { return wx().onMenuShareQZone(x); }
        }
      })
      .filter(Boolean)
      .forEach(function (configure) {
        configure({
          title: title,
          desc: desc,
          link: url,
          imgUrl: image,
          success: success,
        fail: fail})
      })
  },

  getLocation: function (ref) {
    var fail = ref.fail; if ( fail === void 0 ) fail = noop;
    var success = ref.success; if ( success === void 0 ) success = noop;

    wx().getLocation({
      fail: fail,
      success: function (res) {
        success({
          lat: res.latitude,
          lng: res.longitude
        })
      }
    })
  }
}

// 所有API调用，自动放入ready里。
// 如果用户没有主动调KNB.ready，这里会自动调起鉴权。
var apis = require('../api')
apis
  .concat('use')
  .forEach(function (name) {
    if (name === 'config') return
    var isImplemented = KNB[name]
    var method = KNB[name] || ( function (ref) {
      var fail = ref.fail; if ( fail === void 0 ) fail = noop;

      return fail({error: -1, msg: ("API [" + name + "] is not implemented")});
    } )
    if (typeof method !== 'function') return
    KNB[name] = function (a, b, c) {
      KNB.ready(function () { return method(a, b, c); })
    }
    if (!isImplemented) KNB[name].NOTIMPLEMENTED = true
    KNB[name].getSourceCode = function () { return method.toString(); } // for debug reason
  })

if (typeof window !== 'undefined') {
  var version = require('../common/version');
  var logEvent = require('../common/log');
  // 统计wx调用次数
  logEvent("wx", version);
}

KNB.ready = ready; // 增加ready函数
module.exports = KNB
