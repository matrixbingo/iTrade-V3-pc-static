var win = typeof window !== 'undefined' ? window : {};
var mixin = require('./common/mixin');
var Promise = win.Promise || require('pinkie');
var apis = require('./api');

// get an empty object from obj's type
function empty(obj) {
  return Object.prototype.toString.call(obj) === '[object Array]' ? [] : {};
}

module.exports = function (KNB) {
  if (KNB.getPromiseInstance) return;
  KNB.getPromiseInstance = function () {
    var KNBP = {};
    apis.forEach(function (name) {
      if (name === 'config') return;
      KNBP[name] = function (config) {
        return new Promise(function (resolve, reject) {
          KNB[name](mixin(empty(config), config, { success: resolve, fail: reject }));
        });
      };
    });
    KNBP.use = function (name, config) {
      return new Promise(function (resolve, reject) {
        KNB.use(name, mixin(empty(config), config, { success: resolve, fail: reject }));
      });
    };
    return KNBP;
  };
}

