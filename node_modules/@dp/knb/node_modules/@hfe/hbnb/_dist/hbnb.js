(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["NativeBridge"] = factory();
	else
		root["NativeBridge"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports = module.exports = function () {
	    return exports;
	};
	
	if (false) {
	    exports._debug = require('debug');
	    // _debug.enable('hbnb:invoke:*');
	}
	
	// invoke
	exports._invoke = __webpack_require__(1);
	
	// hbnb
	exports.core = __webpack_require__(12);
	
	// basic
	exports.account = __webpack_require__(7);
	exports.log = __webpack_require__(40);
	exports.network = __webpack_require__(42);
	exports.pay = __webpack_require__(46);
	exports.position = __webpack_require__(49);
	exports.storage = __webpack_require__(55);
	exports.thirdApps = __webpack_require__(59);
	exports.ui = __webpack_require__(89);
	exports.webview = __webpack_require__(100);
	
	// tower
	exports.tower = __webpack_require__(64);
	
	//flight
	exports.flight = __webpack_require__(22);
	
	//train
	exports.train = __webpack_require__(69);
	exports.inject = __webpack_require__(29);
	
	//lvyou
	window.Bridge = __webpack_require__(38);
	exports.travel = __webpack_require__(83);
	
	//env
	exports.env = __webpack_require__(16);
	
	//share
	exports.share = __webpack_require__(53);

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(35);

/***/ },
/* 2 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	var PENDING = 'pending';
	var SETTLED = 'settled';
	var FULFILLED = 'fulfilled';
	var REJECTED = 'rejected';
	var NOOP = function () {};
	var isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';
	
	var asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;
	var asyncQueue = [];
	var asyncTimer;
	
	function asyncFlush() {
		// run promise callbacks
		for (var i = 0; i < asyncQueue.length; i++) {
			asyncQueue[i][0](asyncQueue[i][1]);
		}
	
		// reset async asyncQueue
		asyncQueue = [];
		asyncTimer = false;
	}
	
	function asyncCall(callback, arg) {
		asyncQueue.push([callback, arg]);
	
		if (!asyncTimer) {
			asyncTimer = true;
			asyncSetTimer(asyncFlush, 0);
		}
	}
	
	function invokeResolver(resolver, promise) {
		function resolvePromise(value) {
			resolve(promise, value);
		}
	
		function rejectPromise(reason) {
			reject(promise, reason);
		}
	
		try {
			resolver(resolvePromise, rejectPromise);
		} catch (e) {
			rejectPromise(e);
		}
	}
	
	function invokeCallback(subscriber) {
		var owner = subscriber.owner;
		var settled = owner._state;
		var value = owner._data;
		var callback = subscriber[settled];
		var promise = subscriber.then;
	
		if (typeof callback === 'function') {
			settled = FULFILLED;
			try {
				value = callback(value);
			} catch (e) {
				reject(promise, e);
			}
		}
	
		if (!handleThenable(promise, value)) {
			if (settled === FULFILLED) {
				resolve(promise, value);
			}
	
			if (settled === REJECTED) {
				reject(promise, value);
			}
		}
	}
	
	function handleThenable(promise, value) {
		var resolved;
	
		try {
			if (promise === value) {
				throw new TypeError('A promises callback cannot return that same promise.');
			}
	
			if (value && (typeof value === 'function' || typeof value === 'object')) {
				// then should be retrieved only once
				var then = value.then;
	
				if (typeof then === 'function') {
					then.call(value, function (val) {
						if (!resolved) {
							resolved = true;
	
							if (value === val) {
								fulfill(promise, val);
							} else {
								resolve(promise, val);
							}
						}
					}, function (reason) {
						if (!resolved) {
							resolved = true;
	
							reject(promise, reason);
						}
					});
	
					return true;
				}
			}
		} catch (e) {
			if (!resolved) {
				reject(promise, e);
			}
	
			return true;
		}
	
		return false;
	}
	
	function resolve(promise, value) {
		if (promise === value || !handleThenable(promise, value)) {
			fulfill(promise, value);
		}
	}
	
	function fulfill(promise, value) {
		if (promise._state === PENDING) {
			promise._state = SETTLED;
			promise._data = value;
	
			asyncCall(publishFulfillment, promise);
		}
	}
	
	function reject(promise, reason) {
		if (promise._state === PENDING) {
			promise._state = SETTLED;
			promise._data = reason;
	
			asyncCall(publishRejection, promise);
		}
	}
	
	function publish(promise) {
		promise._then = promise._then.forEach(invokeCallback);
	}
	
	function publishFulfillment(promise) {
		promise._state = FULFILLED;
		publish(promise);
	}
	
	function publishRejection(promise) {
		promise._state = REJECTED;
		publish(promise);
		if (!promise._handled && isNode) {
			global.process.emit('unhandledRejection', promise._data, promise);
		}
	}
	
	function notifyRejectionHandled(promise) {
		global.process.emit('rejectionHandled', promise);
	}
	
	/**
	 * @class
	 */
	function Promise(resolver) {
		if (typeof resolver !== 'function') {
			throw new TypeError('Promise resolver ' + resolver + ' is not a function');
		}
	
		if (this instanceof Promise === false) {
			throw new TypeError('Failed to construct \'Promise\': Please use the \'new\' operator, this object constructor cannot be called as a function.');
		}
	
		this._then = [];
	
		invokeResolver(resolver, this);
	}
	
	Promise.prototype = {
		constructor: Promise,
	
		_state: PENDING,
		_then: null,
		_data: undefined,
		_handled: false,
	
		then: function (onFulfillment, onRejection) {
			var subscriber = {
				owner: this,
				then: new this.constructor(NOOP),
				fulfilled: onFulfillment,
				rejected: onRejection
			};
	
			if ((onRejection || onFulfillment) && !this._handled) {
				this._handled = true;
				if (this._state === REJECTED && isNode) {
					asyncCall(notifyRejectionHandled, this);
				}
			}
	
			if (this._state === FULFILLED || this._state === REJECTED) {
				// already resolved, call callback async
				asyncCall(invokeCallback, subscriber);
			} else {
				// subscribe
				this._then.push(subscriber);
			}
	
			return subscriber.then;
		},
	
		catch: function (onRejection) {
			return this.then(null, onRejection);
		}
	};
	
	Promise.all = function (promises) {
		if (!Array.isArray(promises)) {
			throw new TypeError('You must pass an array to Promise.all().');
		}
	
		return new Promise(function (resolve, reject) {
			var results = [];
			var remaining = 0;
	
			function resolver(index) {
				remaining++;
				return function (value) {
					results[index] = value;
					if (!--remaining) {
						resolve(results);
					}
				};
			}
	
			for (var i = 0, promise; i < promises.length; i++) {
				promise = promises[i];
	
				if (promise && typeof promise.then === 'function') {
					promise.then(resolver(i), reject);
				} else {
					results[i] = promise;
				}
			}
	
			if (!remaining) {
				resolve(results);
			}
		});
	};
	
	Promise.race = function (promises) {
		if (!Array.isArray(promises)) {
			throw new TypeError('You must pass an array to Promise.race().');
		}
	
		return new Promise(function (resolve, reject) {
			for (var i = 0, promise; i < promises.length; i++) {
				promise = promises[i];
	
				if (promise && typeof promise.then === 'function') {
					promise.then(resolve, reject);
				} else {
					resolve(promise);
				}
			}
		});
	};
	
	Promise.resolve = function (value) {
		if (value && typeof value === 'object' && value.constructor === Promise) {
			return value;
		}
	
		return new Promise(function (resolve) {
			resolve(value);
		});
	};
	
	Promise.reject = function (reason) {
		return new Promise(function (resolve, reject) {
			reject(reason);
		});
	};
	
	module.exports = Promise;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:invoke:env');
	}
	
	// default value
	exports.isHBNBWebview = false;
	exports.platform = 'h5';
	exports.appVersion = undefined;
	exports.supportPrompt = undefined; // android group 5.x not support alert
	exports.HBNBReady = false;
	
	var versionCompare = __webpack_require__(4);
	var initEvent = __webpack_require__(34);
	
	var initVersion = function initVersion() {
	    // user agent regexp
	    var RE_ANDROID = /android/i;
	    var RE_IOS = /iPhone|iPad/i;
	    var RE_HBNB = /\biHotel\/(\d+(?:\.\d+)*)\b/i;
	    var TRIP_BIZ = /mt_trip_biz/i;
	
	    // check user agent
	    var ua = navigator.userAgent || '';
	    var match = ua.match(RE_HBNB);
	    if (match) {
	        if (RE_IOS.test(ua)) {
	            exports.platform = 'ios';
	            exports.appVersion = match[1];
	            exports.isHBNBWebview = true;
	        } else if (RE_ANDROID.test(ua)) {
	            exports.platform = 'android';
	            exports.appVersion = match[1];
	            exports.isHBNBWebview = true;
	            exports.supportPrompt = TRIP_BIZ.test(ua) || Boolean(versionCompare(exports.appVersion, '6.0') >= 0);
	        }
	    }
	};
	
	var init = function init() {
	    initVersion();
	    initEvent();
	};
	
	init();
	
	if (false) {
	    debug('env = %j', exports);
	}

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:invoke:version-compare');
	}
	
	/**
	 * compare version number
	 *
	 * @private
	 * @param {String} a
	 * @param {String} b
	 * @return {Number} -1 is <, 0 is =, 1 is >
	 *
	 * @example
	 *  compare('6.0', '6.0.1'); // -1
	 *  compare('6.0', '5.9'); // 1
	 *  compare('5.9.2', '5.9.2'); // 0
	 */
	var compare = function compare(a, b) {
	    var pa = String(a).split('.');
	    var pb = String(b).split('.');
	    var len = Math.min(pa.length, pb.length) + 1;
	
	    if (false) {
	        debug('a is %j', pa);
	        debug('b is %j', pb);
	    }
	
	    for (var i = 0; i < len; ++i) {
	        var na = Number(pa[i]);
	        var nb = Number(pb[i]);
	        if (na > nb) {
	            return 1;
	        } else if (nb > na) {
	            return -1;
	        } else if (!isNaN(na) && isNaN(nb)) {
	            return 1;
	        } else if (isNaN(na) && !isNaN(nb)) {
	            return -1;
	        }
	    }
	    return 0;
	};
	
	module.exports = compare;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:invoke:build-uri');
	}
	
	var _id = 0;
	var _buildCallback = function _buildCallback(fn) {
	    var fnID = new Date().getTime() + '_' + ++_id;
	    var callbackName = 'HBNB_CALLBACK_' + fnID;
	    window[callbackName] = function (fn, callbackName) {
	        var innerFN = function innerFN() {
	            var r = fn.apply(null, arguments);
	            if (r !== false) {
	                delete window[callbackName];
	            }
	        };
	        return innerFN;
	    }(fn, callbackName);
	
	    if (false) {
	        //debug('window["%s"] call "%s"', callbackName, fn);
	    }
	
	    return callbackName;
	};
	
	var _processParameters = function _processParameters(key, value) {
	    if (typeof value === 'function') {
	        return _buildCallback(value);
	    } else {
	        return value;
	    }
	};
	
	var buildURI = function buildURI(protocol, moduleName, methodName, parameters) {
	    if (false) {
	        debug('protocol = %s', protocol);
	        debug('module = %s', moduleName);
	        debug('method = %s', methodName);
	        debug('before process, parameters is %j', parameters);
	    }
	
	    var params = encodeURIComponent(JSON.stringify(parameters, _processParameters));
	    if (false) {
	        debug('after encode, parameters is %s', params);
	    }
	
	    var uri = protocol + '//' + moduleName + '/' + methodName + '?params=' + params;
	
	    if (false) {
	        debug('uri = %s', uri);
	    }
	
	    return uri;
	};
	
	module.exports = buildURI;
	module.exports.processParams = _processParameters; // for legency-lvyou

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:account:getUser');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取用户登录信息
	 *
	 * 用户已登录时 resolve，用户未登录 reject
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof account
	 * @static
	 * @name getUser
	 * @return {Promise<user | err>}
	 * @example
	 *  hbnb.account.getUser()
	 *      .then(function(user) {
	 *          user = {
	 *              userId: 1234567,
	 *              userName: 'name is string',
	 *              userToken: 'token is string'
	 *          }
	 *      })
	 *      .catch(function(err) {
	 *          err = {
	 *              message: "用户未登录美团",
	 *              status: -1
	 *          }
	 *      });
	 */
	
	module.exports = function (cb, eb) {
	    var p = new Promise(function (resolve, reject) {
	        _invoke('user', 'get_user', {
	            callback: function callback(user) {
	                if (false) {
	                    debug('user is %j', user, user);
	                }
	                resolve(user);
	            },
	            errback: reject
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name account
	 */
	
	exports.login = __webpack_require__(8);
	exports.getUser = __webpack_require__(6);
	exports.mobileLogin = __webpack_require__(9);
	exports.sendMobileLoginCode = __webpack_require__(10);

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:account:login');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 打开客户端登录界面
	 *
	 * 1. 客户端不会判断是否已经登录。
	 * 需要业务方自己调用 `hbnb.account.getUser` 判断是否已经登录。
	 * 2. 用户没有登录直接返回时，客户端不会给出通知。
	 * 需要业务方自己监听 `HBNB:pageshow` 事件。
	 *
	 * 支持版本
	 * + iHotel/5.8
	 *
	 * @memberof account
	 * @static
	 * @name login
	 * @returns {Promise<user>} resolve if login success
	 * @example
	 *  hbnb.account.login()
	 *      .then(function(user) {
	 *          user = {
	 *              userId: 1234567,
	 *              userName: 'name is string',
	 *              userToken: 'token is string'
	 *          }
	 *      })
	 */
	
	module.exports = function () {
	    var p = new Promise(function (resolve, reject) {
	        _invoke('user', 'login', {
	            callback: function callback(user) {
	                if (false) {
	                    debug('success, user is %j', user, user);
	                }
	                resolve(user);
	            },
	            errback: reject
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:account:mobileLogin');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 打开客户端登录界面
	 *
	 * 客户端不会判断是否已经登录。
	 * 需要业务方自己调用 `hbnb.account.getUser` 判断是否已经登录。
	 *
	 * 支持版本
	 * + iHotel/6.2
	 *
	 * @memberof account
	 * @static
	 * @name mobileLogin
	 * @param mobile
	 * @param code
	 * @returns {Promise<user>} resolve if login success
	 * @example
	 *  hbnb.account.mobileLogin(19988887777, 123456)
	 *      .then(function(user) {
	 *          user = {
	 *              userId: 1234567,
	 *              userName: 'name is string',
	 *              userToken: 'token is string'
	 *          }
	 *      })
	 *      .catch(function(err) {
	 *      })
	 */
	
	module.exports = function (mobile, code) {
	    var p = new Promise(function (resolve, reject) {
	        _invoke('user', 'mobile_login', {
	            mobile: mobile,
	            code: code,
	            callback: function callback(user) {
	                if (false) {
	                    debug('success, user is %j', user, user);
	                }
	                resolve(user);
	            },
	            errback: reject
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:account:sendMobileLoginCode');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	
	 *
	 * 支持版本
	 * + iHotel/6.2
	 *
	 * @memberof account
	 * @static
	 * @name sendMobileLoginCode
	 * @param {String} mobile 手机号
	 * @returns {Promise<user>} resolve if login success
	 * @example
	 *  hbnb.account.sendMobileLoginCode('19988887777')
	 *      .then(function() {
	 *      })
	 *      .catch(function() {
	 *      })
	 */
	
	module.exports = function (mobile) {
	    var p = new Promise(function (resolve, reject) {
	        _invoke('user', 'send_mobile_login_code', {
	            mobile: mobile,
	            callback: function callback() {
	                resolve();
	            },
	            errback: reject
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:core:HBNBVersion');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取桥协议版本
	 *
	 * 支持版本
	 * + iHotel/6.1+
	 * + HBNB/?
	 *
	 * @memberof core
	 * @static
	 * @name HBNBVersion
	 * @return {Promise<version>}
	 * @example
	 *  hbnb.core.HBNBVersion()
	 *      .then(function(version) {
	 *      });
	 */
	
	module.exports = function () {
	    if (false) {
	        debug('called');
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('core', 'hbnb_version', {
	            callback: function callback(version) {
	                if (false) {
	                    debug('version is %j', version);
	                }
	                if (version && version.version) {
	                    resolve(version.version);
	                } else {
	                    reject();
	                }
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name core
	 */
	
	exports.HBNBVersion = __webpack_require__(11);
	exports.supportApis = __webpack_require__(14);
	exports.OSVersion = __webpack_require__(13);

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:core:OSVersion');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取桥协议版本
	 *
	 * 支持版本
	 * + iHotel/6.1+
	 * + HBNB/?
	 *
	 * @memberof core
	 * @static
	 * @name OS
	 * @return {Promise<version>}
	 * @example
	 *  hbnb.core.OSVersion()
	 *      .then(function(version) {
	 *          version = {
	 *              os: 'ios',
	 *              version: '9.0'
	 *          }
	 *      });
	 */
	
	module.exports = function () {
	    if (false) {
	        debug('called');
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('core', 'os_version', {
	            callback: function callback(version) {
	                if (false) {
	                    debug('version is %j', version);
	                }
	                resolve(version);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:core:supportApis');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取桥协议版本
	 *
	 * 支持版本
	 * + iHotel/6.1+
	 * + HBNB/?
	 *
	 * @memberof core
	 * @static
	 * @name supportApis
	 * @return {Promise<Array>}
	 * @example
	 *  hbnb.core.supportApis([
	 *      'magpie://ui/alert',
	 *      'magpie://what/the_f**k'
	 *  ])
	 *      .then(function(status) {
	 *          status = [
	 *              true,
	 *              false
	 *          ]
	 *      });
	 */
	
	module.exports = function (apis) {
	    if (false) {
	        debug('apis is %j', apis);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('core', 'support_apis', {
	            callback: function callback(status) {
	                if (false) {
	                    debug('status is %j', status);
	                }
	                resolve(status);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:env:getPageEnv');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取当前页面变量
	 *
	 * 支持版本
	 * + iHotel/6.3
	 *
	 * @memberof env
	 * @static
	 * @name getPageEnv
	 * @return {Promise<version>}
	 * @example
	 *  hbnb.env.getPageEnv()
	 *      .then(function(env) {
	 *      });
	 */
	
	module.exports = function () {
	    if (false) {
	        debug('called');
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('env', 'get_page_env', {
	            callback: function callback(env) {
	                resolve(env);
	            },
	            errback: function errback(err) {
	                reject(err);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name env
	 */
	
	exports.getPageEnv = __webpack_require__(15);

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:flight:getExpress');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取邮寄地址
	 *
	 * @memberof flight
	 * @static
	 * @name getExpress
	 * @param {siteId} siteId,
	 * @param {int} id 默认为 '',
	 * @return {Promise}
	 * @example
	 hbnb.flight.getExpress(1, '').then(function(data) {
	     data = {
	         id: 'id is number',
	         name: 'name is string',
	         mobile: 'mobile is string',
	         province: 'province is string',
	         city: 'city is string',
	         district: 'district is string',
	         address: 'address is string',
	         postCode: 'postCode is string',
	         expressAmount: 'expressAmount is string'
	     }
	 });
	 */
	module.exports = function (siteId, id) {
	    var p = new Promise(function (resolve, reject) {
	        _invoke('flight', 'get_express', {
	            siteId: siteId,
	            id: id,
	            callback: function callback(date) {
	                resolve(date);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:flight:getFilter');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 机票筛选
	 *
	 * TODO：补全参数
	 *
	 * @memberof flight
	 * @static
	 * @name getFilter
	 * @param {Object} opts
	 * @return {Promise}
	 * @example
	 *  hbnb.flight.getFilters([
	 *  ]).then(function(data) {
	 *  });
	 */
	module.exports = function (opts) {
	    if (false) {
	        debug('opts is %j', opts);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('flight', 'get_filter', {
	            options: opts,
	            callback: function callback(data) {
	                resolve(data);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:flight:getLinkman');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取联系人
	 *
	 * @memberof flight
	 * @static
	 * @name getLinkman
	 * @param {int} id 默认为 '', 
	 * @return {Promise}
	 * @example
	 * hbnb.flight.getLinkman('').then(function(data) {
	 *     data = {
	           id: 'id is number',
	 *         name: 'name is string',
	 *         mobile: 'mobile is string',
	 *         email: 'mobile is string',
	 *     }
	 * });
	 */
	module.exports = function (id) {
	    var p = new Promise(function (resolve, reject) {
	        _invoke('flight', 'get_linkman', {
	            id: id,
	            is_international: is_international,
	            callback: function callback(date) {
	                resolve(date);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:flight:gotoAppHomepage');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 返回 app 首页
	 *
	 * @memberof flight
	 * @static
	 * @name gotoAppHomepage
	 * @return {Undefined}
	 * @example
	 *  hbnb.flight.gotoAppHomepage();
	 */
	module.exports = function () {
	    if (false) {
	        debug('called');
	    }
	
	    _invoke('flight', 'goto_app_homepage');
	};

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:flight:gotoOrderDetail');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 进入机票订单详情页面
	 *
	 * 点击后退时会返回订单列表页面，再后退会返回我的页面
	 *
	 * @memberof flight
	 * @static
	 * @name gotoOrderDetail
	 * @param {String} url 订单页面地址
	 * @param {String} orderListUrl 订单列表页面地址
	 * @return {Undefined}
	 * @example
	 *  hbnb.flight.gotoOrderDetail(
	 *      'url'
	 *      'orderListUrl'
	 *  );
	 */
	module.exports = function (url, orderListUrl) {
	    if (false) {
	        debug('url is %s', url);
	        debug('orderListUrl is %s', orderListUrl);
	    }
	
	    _invoke('flight', 'goto_order_detail', {
	        url: url,
	        orderListUrl: orderListUrl
	    });
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name flight
	 */
	
	exports.gotoAppHomepage = __webpack_require__(20);
	
	//exports.getUser = require('./get-user.js');
	//exports.login = require('./login.js');
	
	exports.getFilter = __webpack_require__(18);
	exports.getLinkman = __webpack_require__(19);
	exports.getExpress = __webpack_require__(17);
	exports.selectCity = __webpack_require__(23);
	exports.selectDate = __webpack_require__(24);
	exports.selectRoundDate = __webpack_require__(25);
	
	//exports.alipay = require('./alipay.js');
	
	exports.gotoOrderDetail = __webpack_require__(21);

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:flight:selectCity');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选择城市
	 *
	 * @memberof flight
	 * @static
	 * @name selectCity
	 * @param {String} city
	 * @return {Promise}
	 * @example
	 *  hbnb.flight.selectCity('city')
	 *      .then(function(city) {
	 *          city = {
	 *              cityName: '',
	 *              cityPinyin: ''
	 *          }
	 *      });
	 */
	module.exports = function (city) {
	    if (false) {
	        debug('city is %s', city);
	    }
	    city = city || '';
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('flight', 'select_city', {
	            original: city,
	            callback: function callback(city) {
	                resolve(city);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:flight:selectDate');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选择日期
	 *
	 * @memberof flight
	 * @static
	 * @name selectDate
	 * @param {String} fromCity
	 * @param {String} toCity
	 * @param {String} months
	 * @param {String} original
	 * @return {Promise}
	 * @example
	 *  hbnb.flight.selectDate(
	 *      fromCity,
	 *      toCity,
	 *      months,
	 *      original
	 *  ).then(function(data) {
	 *      console.log(data);
	 *  });
	 */
	module.exports = function (fromCity, toCity, months, original) {
	    if (false) {
	        debug('original is %s', original);
	        debug('from city %s', fromCity);
	        debug('to city %s', toCity);
	        debug('mounths is %s', months);
	    }
	    original = original || '';
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('flight', 'select_date', {
	            original: original,
	            months: months,
	            fromCity: fromCity,
	            toCity: toCity,
	            callback: function callback(date) {
	                resolve(date);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:flight:selectRoundDate');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选择日期
	 *
	 * @memberof flight
	 * @static
	 * @name selectRoundDate
	 * @return {Promise}
	 * @example
	 *  hbnb.flight.selectRoundDate().then(function(data) {
	 *      console.log(data);
	 *  });
	 */
	module.exports = function () {
	    var p = new Promise(function (resolve, reject) {
	        _invoke('flight', 'select_roundDate', {
	            callback: function callback(date) {
	                resolve(date);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:inject:addStopUrl');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 匹配隐藏 webview 页面的 url
	 *
	 * 符合时，停止页面加载并执行脚本
	 * 只匹配一次？
	 *
	 * TODO: 支持版本
	 *
	 * 支持版本
	 * + iHotel/5.9?
	 *
	 * @memberof inject
	 * @static
	 * @name addStopUrl
	 * @param {String} name 隐藏 webview 名
	 * @param {String} pattern 用于匹配 url 的正则
	 * @param {String} script 匹配后执行的命令
	 * @return {Promise}
	 * @example
	 *  hbnb.inject.addStopUrl('name', 'pattern', 'script')
	 *      .then(function() {
	 *          console.log('loaded');
	 *      });
	 */
	module.exports = function (name, pattern, script) {
	    if (false) {
	        debug('name is %s', name);
	        debug('pattern is %s', pattern);
	        debug('script is %s', script);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('inject', 'add_stop_url', {
	            name: name,
	            pattern: pattern,
	            script: script,
	            callback: function callback() {
	                resolve();
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:inject:callback');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 隐藏 webview 中使用该方法返回数据
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof inject
	 * @static
	 * @name callback
	 * @param {String} fnName 回调函数名
	 * @param {String} data 返回的数据
	 * @return {Undefined}
	 * @example
	 *  hbnb.inject.callback('funcName', 'data')
	 */
	module.exports = function (fnName, data) {
	    if (false) {
	        debug('fnName is %s', fnName);
	        debug('data is %s', data);
	    }
	
	    _invoke('inject', 'callback', {
	        callback: fnName,
	        param: data
	    });
	};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:inject:close');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 关闭隐藏 webview
	 *
	 * 主要为了减小内存占用
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof inject
	 * @static
	 * @name close
	 * @param {String} name 隐藏 webview 名
	 * @return {Promise}
	 * @example
	 *  hbnb.inject.close('name')
	 */
	module.exports = function (name) {
	    if (false) {
	        debug('name is %s', name);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('inject', 'close', {
	            name: name,
	            callback: function callback() {
	                resolve();
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name inject
	 */
	
	exports.load = __webpack_require__(31);
	exports.loadHTML = __webpack_require__(30);
	exports.close = __webpack_require__(28);
	exports.show = __webpack_require__(33);
	exports.runScript = __webpack_require__(32);
	
	exports.addStopUrl = __webpack_require__(26);
	
	exports.callback = __webpack_require__(27);

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:inject:loadHTML');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 打开一个隐藏 webview
	 *
	 * 如果指定的 `name` 还不存在，会创建一个新的 webview。
	 * 在指定的 webview 中加载给定的 `html` 片段
	 * 在加载页面所有静态资源请求都完成时，Promise resolve。
	 * 但是不保证页面已经可用，业务方可自己进行 domready 等检测。
	 *
	 * 支持版本
	 * + iHotel/6.1+
	 *
	 * @memberof inject
	 * @static
	 * @name loadHTML
	 * @param {String} name 隐藏 webview 名
	 * @param {String} url 需要加载的页面地址
	 * @param {String} html 需要加载的 html 片段
	 * @return {Promise}
	 * @example
	 *  hbnb.inject.loadHTML(
	 *      'name',
	 *      'https://kyfw.12306.cn/otn/',
	 *      '<!DOCTYPE html><html><head><meta charset="utf-8" /></head><body></body></html>'
	 *  ).then(function() {
	 *      console.log('loaded');
	 *  });
	 */
	module.exports = function (name, url, html) {
	    if (false) {
	        debug('name is %s', name);
	        debug('url is %s', url);
	        debug('html is %s', html);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('inject', 'load_html', {
	            name: name,
	            baseUrl: url,
	            html: html,
	            callback: function callback() {
	                resolve();
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:inject:load');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 打开一个隐藏 webview
	 *
	 * 如果指定的 `name` 还不存在，会创建一个新的 webview。
	 * 如果指定的 `name` 存在，会在该 webview 上加载新的 url。
	 * 在加载页面所有静态资源请求都完成时，Promise resolve。
	 * 但是不保证页面已经可用，业务方可自己进行 domready 等检测。
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof inject
	 * @static
	 * @name load
	 * @param {String} name 隐藏 webview 名
	 * @param {String} url 需要加载的页面地址
	 * @return {Promise}
	 * @example
	 *  hbnb.inject.load(
	 *      'name',
	 *      'https://kyfw.12306.cn/otn/leftTicket/init'
	 *  ).then(function() {
	 *      console.log('loaded');
	 *  });
	 */
	module.exports = function (name, url) {
	    if (false) {
	        debug('name is %s', name);
	        debug('url is %s', url);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('inject', 'load', {
	            name: name,
	            url: url,
	            callback: function callback() {
	                resolve();
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:inject:runScript');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 向隐藏 webview 注入脚本
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof inject
	 * @static
	 * @name runScript
	 * @param {String} name 隐藏 webview 名
	 * @param {String} script 注入的脚本，必须为可执行函数
	 * @param {String} param script 的参数，即 `hbnb.inject.callback` 的 `funcName`
	 * @return {Promise}
	 * @example
	 *  hbnb.inject.runScript(
	 *      'name',
	 *      'script',
	 *      'param'
	 *  ).then(function() {
	 *      console.log('loaded');
	 *  });
	 */
	module.exports = function (name, script, param) {
	    if (false) {
	        debug('name is %s', name);
	        debug('script is %s', script);
	        debug('param is %s', param);
	    }
	
	    script = script.toString();
	    var p = new Promise(function (resolve, reject) {
	        _invoke('inject', 'run_script', {
	            name: name,
	            script: script,
	            param: param,
	            callback: function callback() {
	                resolve();
	            }
	        });
	    });
	
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:inject:show');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 将隐藏 webview 放到前台
	 *
	 * TODO: 验证下返回值
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof inject
	 * @static
	 * @name show
	 * @param {String} name 隐藏 webview 名
	 * @return {Promise}
	 * @example
	 *  hbnb.inject.show('name');
	 */
	module.exports = function (name) {
	    if (false) {
	        debug('name is %s', name);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('inject', 'show', {
	            name: name
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * 1. 页面开启
	 * 2. 页面隐藏
	 * 3. 桥协议可用
	 */
	
	var debug;
	var assert;
	if (false) {
	    debug = require('debug')('hbnb:invoke:event');
	    assert = require('assert');
	}
	
	var env = __webpack_require__(3);
	
	var win = window;
	var doc = document;
	
	var dispatch = function dispatch(eventName) {
	    if (false) {
	        assert(eventName);
	        debug('dispatch event "%s"', eventName);
	    }
	
	    var ev = doc.createEvent('Events');
	    ev.initEvent(eventName);
	    doc.dispatchEvent(ev);
	};
	
	var addLifecycleEvent = function addLifecycleEvent() {
	    if (false) {
	        debug('add lifecycle event');
	        assert(win.HBNB);
	    }
	
	    dispatch('HBNB:ready');
	    env.HBNBReady = true;
	
	    win.HBNB.onPageShow = function () {
	        dispatch('HBNB:pageshow');
	    };
	
	    win.HBNB.onPageHide = function () {
	        dispatch('HBNB:pagehide');
	    };
	};
	
	var checkHBNB = function checkHBNB() {
	    setTimeout(function check() {
	        if (win.HBNB) {
	            addLifecycleEvent();
	        } else {
	            setTimeout(check, 500);
	        }
	    });
	};
	
	var initEvent = function initEvent() {
	    if (false) {
	        if (env.platform === 'h5') {
	            win.HBNB = {};
	            addLifecycleEvent();
	        }
	    }
	
	    if (!env.isHBNBWebview) {
	        if (false) {
	            debug('not HBNB webview');
	        }
	        return;
	    }
	
	    if (env.platform === 'ios') {
	        if (win.HBNB) {
	            // ios 会添加 HBNB 对象，如果有该对象，说明桥协议可用
	            addLifecycleEvent();
	        } else if (env.HBNBVersion) {
	            // 带 HBNB 的版本，在可用时会触发 _HBNBReady 事件，表示桥协议可用了
	            doc.addEventListener('_HBNBReady', addLifecycleEvent);
	        } else {
	            // 旧版本只能定时检查
	            checkHBNB();
	        }
	    } else if (env.platform === 'android') {
	        if (env.supportPrompt) {
	            // 支持 prompt 的版本，是在页面加载前就可用了
	            win.HBNB = {};
	            addLifecycleEvent();
	        } else if (win.HBNB) {
	            // 旧版本使用 HBNB 传递数据，存在 HBNB 时可用
	            addLifecycleEvent();
	        } else {
	            // 就版本只能定时检查
	            checkHBNB();
	        }
	    }
	};
	
	module.exports = initEvent;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	var assert;
	if (false) {
	    debug = require('debug')('hbnb:invoke:invoke');
	    assert = require('assert');
	}
	
	var env = __webpack_require__(3);
	var ready = __webpack_require__(36);
	var buildURI = __webpack_require__(5);
	var sendURI = __webpack_require__(37);
	
	var invoke = function invoke(moduleName, methodName, parameters, protocol) {
	    if (false) {
	        //assert(env.HBNBReady);
	        debug('module = %s', moduleName);
	        debug('method = %s', methodName);
	        debug('parameters = %j', parameters);
	        debug('protocol = %s', protocol);
	    }
	
	    // return if not in meituan app
	    if (true) {
	        if (!env.isHBNBWebview) {
	            if (parameters && parameters.complete) {
	                var complete = parameters.complete;
	                if (typeof complete === 'function') {
	                    setTimeout(function () {
	                        complete({
	                            status: 200,
	                            message: 'not HBNB webview'
	                        });
	                    });
	                }
	                return;
	            }
	        }
	    }
	
	    // throw Error on development
	    if (false) {
	        assert(typeof moduleName === 'string' && moduleName);
	        assert(typeof methodName === 'string' && methodName);
	    }
	
	    parameters = parameters || {};
	    protocol = protocol || 'magpie:';
	    var uri = buildURI(protocol, moduleName, methodName, parameters);
	
	    if (false) {
	        debug('uri = %s', uri);
	    }
	
	    ready(function () {
	        sendURI(uri);
	    });
	};
	
	module.exports = invoke;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:invoke:ready');
	}
	
	var env = __webpack_require__(3);
	
	var fnQueue = [];
	
	document.addEventListener('HBNB:ready', function () {
	    if (false) {
	        debug('fnQueue length = %s', fnQueue.length);
	    }
	
	    for (var i = 0, ii = fnQueue.length; i < ii; ++i) {
	        fnQueue[i]();
	    }
	});
	
	var ready = function ready(fn) {
	    if (typeof fn !== 'function') {
	        return;
	    }
	
	    if (env.HBNBReady) {
	        fn();
	    } else {
	        if (false) {
	            debug('push fn to fnQueue');
	        }
	
	        fnQueue.push(fn);
	    }
	};
	
	module.exports = ready;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:invoke:send-uri');
	}
	
	var env = __webpack_require__(3);
	
	/*eslint-disable no-undef, block-scoped-var, no-alert */
	var strategy = {
	    'alert': function alert(uri) {
	        window.alert(uri);
	    },
	    'prompt': function prompt(uri) {
	        window.prompt(uri);
	    },
	    'HBNB': {
	        'android': function android(uri) {
	            HBNB.sendBridgeMessage(uri);
	        },
	        'ios': function ios(uri) {
	            HBNB.postMessage(uri);
	        }
	    }
	};
	/*eslint-enable no-undef, block-scoped-var, no-alert */
	
	var sendURI;
	if (env.platform === 'ios') {
	    sendURI = strategy['HBNB']['ios'];
	} else if (env.platform === 'android') {
	    if (env.supportPrompt) {
	        // android app >= 6.0 support window.prompt
	        sendURI = strategy['prompt'];
	    } else {
	        sendURI = strategy['HBNB']['android'];
	    }
	} else {
	    sendURI = strategy['alert'];
	}
	
	if (false) {
	    debug('sendURI = %s', sendURI);
	}
	
	module.exports = sendURI;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function Bridge() {}
	
	var pushBack = __webpack_require__(39);
	Bridge.prototype.pushBack = Bridge.pushBack = pushBack;
	Bridge.prototype.setTitle = Bridge.setTitle = function (title, subtitle) {
	    pushBack('bridge:', 'set_webview_title', {
	        title: title,
	        subtitle: subtitle
	    });
	};
	
	module.exports = Bridge;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var env = __webpack_require__(3);
	var buildURI = __webpack_require__(5);
	
	var messageQueue = [];
	var messageQueueFetch = function messageQueueFetch() {
	    var response = messageQueue.length ? JSON.stringify(messageQueue) : '';
	    messageQueue = [];
	    if (response) return response;
	};
	window.messageQueueFetch = messageQueueFetch;
	
	var pushBack = function pushBack(protocol, name, params) {
	    params = params || {};
	    var uri = protocol + '//' + name + '?params=' + encodeURIComponent(JSON.stringify(params, buildURI.processParams));
	    if (env.platform === 'android') {
	        if (env.supportPrompt) {
	            window.prompt(uri); // eslint-disable-line no-alert
	        } else {
	            try {
	                window['MeituanHotelWebviewBridge']['sendBridgeMessage'](uri);
	            } catch (e) {}
	        }
	    } else if (env.platform === 'ios') {
	        messageQueue.push(uri);
	    } else {
	        // for debug
	        alert(uri); // eslint-disable-line no-alert
	    }
	};
	
	module.exports = pushBack;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name log
	 */
	
	exports.mge = __webpack_require__(41);

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:log:mge');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 发送 mge 统计参数
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof log
	 * @static
	 * @name mge
	 * @param {String | Undefined} cid 页面名
	 * @param {String | Undefined} act 事件名
	 * @param {String | Undefined} val 页面属性
	 * @param {String | Undefined} lab 事件属性
	 * @return {Undefined}
	 * @example
	 *  hbnb.log.mge('页面A', '点击事件B');
	 *  hbnb.log.mge({
	 *      cid: '页面A‘，
	 *      act: '点击事件B'
	 *  });
	 */
	
	module.exports = function (cid, act, val, lab) {
	    if (false) {
	        debug('cid = %s', cid);
	        debug('act = %s', act);
	        debug('val = %s', val);
	        debug('lab = %s', lab);
	    }
	
	    if ((typeof cid === 'undefined' ? 'undefined' : _typeof(cid)) === 'object') {
	        var opt = cid;
	        cid = String(opt.cid || '');
	        act = String(opt.act || opt.action);
	        val = String(opt.val || opt.value);
	        lab = String(opt.lab || opt.label);
	    }
	
	    _invoke('log', 'mge', {
	        cid: cid || '',
	        action: act || '',
	        value: val || '',
	        label: lab || ''
	    });
	};

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name network
	 */
	
	exports.request = __webpack_require__(43);
	exports.sendSms = __webpack_require__(44);
	
	//exports.httpRequest = require('./http-request.js'); // not support POST, disabled

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var debug;
	var assert;
	if (false) {
	    debug = require('debug')('hbnb:module:network:request');
	    assert = require('assert');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 发起网络请求
	 *
	 * @memberof network
	 * @static
	 * @name request
	 * @param {Object} opts 请求参数，参考 [request](https://github.com/request/request#requestoptions-callback)
	 * @return {Promise<resp|err>}
	 * @example
	 *  hbnb.network.request({
	 *      url: 'https://www.google.com/',
	 *      method: 'GET',
	 *      headers: {
	 *          'X-Requested-With': 'XMLHttpRequest'
	 *      },
	 *      body: '',
	 *      followRedirect: true,
	 *      maxRedirects: 10,
	 *      timeout: 5000
	 *  }).then(function(resp) {
	 *      resp = {
	 *          statusCode: 404,
	 *          body: '',
	 *          headers: {
	 *              'content-encoding': ['gzip']
	 *          }
	 *      }
	 *  }).catch(function(err) {
	 *      err = {
	 *          message: "用户未登录美团",
	 *          status: -1
	 *      }
	 *  });
	 *
	 */
	
	module.exports = function (opts) {
	    if (false) {
	        debug('request opts is %j', opts);
	        assert(opts.url);
	        assert(typeof opts.method === 'undefined' || ['GET', 'POST', 'PUT', 'DELETE'].indexOf(opts.method.toUpperCase()) !== -1);
	        assert(typeof opts.headers === 'undefined' || _typeof(opts.headers) === 'object');
	        assert(typeof opts.body === 'undefined' || typeof opts.body === 'string');
	        assert(typeof opts.followRedirect === 'undefined' || typeof opts.followRedirect === 'boolean');
	        assert(typeof opts.maxRedirects === 'undefined' || typeof opts.maxRedirects === 'number');
	        assert(typeof opts.timeout === 'undefined' || typeof opts.timeout === 'number');
	    }
	    if (opts.headers) {
	        var newHeaders = {};
	        var headers = opts.headers;
	        for (var key in headers) {
	            if (headers.hasOwnProperty(key)) {
	                newHeaders[key.toLowerCase()] = headers[key];
	            }
	        }
	        opts.headers = newHeaders;
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('network', 'request', {
	            url: opts.url,
	            method: opts.method ? opts.method.toUpperCase() : 'GET',
	            headers: opts.headers ? opts.headers : {},
	            body: opts.body ? opts.body : '',
	            followRedirect: !(opts.followRedirect === false),
	            maxRedirects: opts.maxRedirects ? opts.maxRedirects : 10,
	            timeout: opts.timeout ? opts.timeout : 5000,
	            insecure: opts.insecure ? opts.insecure : false,
	            responseEncoding: opts.responseEncoding ? opts.responseEncoding : '',
	            callback: function callback(response) {
	                if (false) {
	                    debug('request success, %j', response, response);
	                }
	                var newHeaders = {};
	                var headers = response.headers;
	                for (var i = 0, ii = headers.length; i < ii; i++) {
	                    var header = headers[i];
	                    var index = header.indexOf(';');
	                    if (index === -1) continue;
	                    var key = header.substr(0, key).trim().toLowerCase();
	                    var val = header.substr(index + 1).trim();
	                    newHeaders[key] = val;
	                }
	                response.headers = newHeaders;
	                resolve(response);
	            },
	            errback: function errback(msg) {
	                if (false) {
	                    debug('request fail, %j', msg);
	                }
	                reject(msg);
	            }
	        });
	    });
	
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:network:sendSms');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 发送预填充内容了的短信
	 *
	 * 支持版本
	 * + iHotel/6.6
	 *
	 * @memberof network
	 * @static
	 * @name sendSms
	 * @example
	 *  hbnb.network.sendSms({
	 *      "recipients": 110, // 电话号码，支持多个
	 *      "text": "help" // 发送到的文字内容
	 *  })
	 */
	
	module.exports = function (mobile, content) {
	    _invoke('device', 'send_sms', {
	        "recipients": mobile, // 电话号码，支持多个
	        "text": content // 发送到的文字内容
	    });
	};

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:pay:getFingerprint');
	}
	
	var _invoke = __webpack_require__(1);
	var env = __webpack_require__(3);
	var versionCompare = __webpack_require__(4);
	
	/**
	 * 调用客户端收银台
	 *
	 * 支持版本
	 * + iHotel/6.1+
	 *
	 * @memberof pay
	 * @static
	 * @name getFingerprint
	 * @returns {Promise<String>}
	 * @example
	 *  hbnb.pay.getFingerprint()
	 *      .then(function(fp) {
	 *          fp = 'xxxxxxx'
	 *      });
	 */
	
	module.exports = function () {
	    if (false) {
	        debug('called');
	    }
	    var p = new Promise(function (resolve, reject) {
	        if (versionCompare(env.appVersion, '6.1') >= 0) {
	            _invoke('pay', 'get_fingerprint', {
	                callback: function callback(fingerprint) {
	                    if (false) {
	                        debug('fingerprint return %j', fingerprint);
	                    }
	                    if (fingerprint && fingerprint.fingerprint) {
	                        resolve(fingerprint.fingerprint);
	                    } else {
	                        reject();
	                    }
	                }
	            });
	        } else {
	            reject();
	        }
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name pay
	 */
	
	exports.payment = __webpack_require__(47);
	exports.getFingerprint = __webpack_require__(45);

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:pay:payment');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 调用客户端收银台
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof pay
	 * @static
	 * @name payment
	 * @param {Object} opts 收银台参数
	 * @returns {Promise<orderId | Undefined>}
	 * @example
	 *  hbnb.pay.payment({
	 *      tradeNo: '123',
	 *      payToken: '456',
	 *      orderId: '789',
	 *      returnURL: 'imeituan://...'
	 *  }).then(function(data) {
	 *      data = {
	 *          isPayed: true,
	 *          orderId: '789'
	 *      }
	 *  }).catch(function() {
	 *      ...
	 *  });
	 */
	
	module.exports = function (opts) {
	    if (false) {
	        debug('payment opts is %j', opts);
	    }
	    var p = new Promise(function (resolve, reject) {
	        var cb = opts.callback;
	        opts.callback = function (data) {
	            if (false) {
	                debug('payment return %j', data);
	            }
	
	            resolve(data);
	            if (typeof cb === 'function') {
	                cb(data);
	            }
	        };
	        opts.errback = function () {
	            reject();
	        };
	        _invoke('pay', 'cashier', opts);
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:position:getCity');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取当前选择的城市
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof position
	 * @static
	 * @name getCity
	 * @return {Promise<city>}
	 * @example
	 *  hbnb.position.getCity()
	 *      .then(function(city) {
	 *          city = {
	 *              cityId: 1,
	 *              cityName: '北京'
	 *              cityPinyin: 'beijing'
	 *          }
	 *      });
	 */
	module.exports = function () {
	    if (false) {
	        debug('call get city');
	    }
	    var p = new Promise(function (resolve, reject) {
	        _invoke('position', 'get_city', {
	            callback: function callback(city) {
	                if (false) {
	                    debug('return city %j', city);
	                }
	                resolve(city);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name position
	 */
	
	exports.getCity = __webpack_require__(48);

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:share:activeNavButton');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * share.activeNavButton 激活导航栏分享按钮
	 *
	 * 支持版本
	 * + iHotel/7.0+
	  * 此版本不支持successCallback,failCallback 客户端说排期比较紧张，7.1版本实现, ios失败没有回调通知
	 * @memberof share
	 * @static
	 * @name activeNavButton
	 * @param {Array} channel 渠道
	 * @param {Object} conf 配置信息
	 * @return {Undefined}
	 * @example
	 *  hbnb.share.activeNavButton(['weixin','weibo','sinaWeibo'], {
	        content: '分享内容',
	        detailURL: 'http://i.meituan.com/',
	        imageURL: 'http://p1.meituan.net/codeman/799087624091d1d43768b7da396d4a122532.png',
	        title: '分享标题'
	    });
	 */
	
	module.exports = function (channelParam, configParam, successCallback, failCallback) {
	    if (false) {
	        debug('param channelParam is %j', channelParam);
	        debug('param configParam is %j', configParam);
	    }
	    var p = new Promise(function (resolve, reject) {
	        var data = {
	            'sinaweibo': 1,
	            'qzone': 2,
	            'qqweibo': 4,
	            'renren': 8,
	            'kaixin': 16,
	            'sms': 32,
	            'email': 64,
	            'weixin': 128,
	            'weixinfriends': 256,
	            'qqclient': 512,
	            'all': -1
	        };
	        var params = {};
	        var channel = channelParam || [];
	        var config = configParam || {};
	        var channelNumber = 0;
	        var i;
	        var num;
	        var d;
	        if (channel && Object.prototype.toString.call(channel) == "[object Array]") {
	            for (var i = 0, len = channel.length; i < len; i++) {
	                d = channel[i];
	                num = data[d.toLowerCase()];
	                channelNumber += num;
	                if (config['content_' + d]) {
	                    params['content_' + num] = config['content_' + d];
	                }
	            }
	            if (config.cid) {
	                params.cid = config.cid;
	            }
	            params.channel = channelNumber;
	            params.content = config.content;
	            params.detailURL = config.detailURL;
	            params.imageURL = config.imageURL;
	            params.title = config.title;
	            params.callback = function (returnData) {
	                if (returnData && returnData.status === 'COMPLETE') {
	                    if (typeof successCallback === 'function') {
	                        successCallback(returnData);
	                    }
	                } else {
	                    if (typeof failCallback === 'function') {
	                        failCallback(returnData);
	                    }
	                }
	                resolve(returnData);
	                return false;
	            };
	            _invoke('share', 'enable_nav_share_button', params);
	        }
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:share:callLocal');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * share.callLocal 激活导航栏分享按钮
	 *
	 * 支持版本
	 * + iHotel/7.0+
	  * 此版本不支持successCallback,failCallback 客户端说排期比较紧张，7.1版本实现
	 * @memberof share
	 * @static
	 * @name callLocal
	 * @param {Array} channel 渠道
	 * @param {Object} conf 配置信息
	 * @return {Undefined}
	 * @example
	 *  hbnb.share.callLocal(['weixin','weibo','sinaWeibo'], {
	        content: '分享内容',
	        detailURL: 'http://i.meituan.com/',
	        imageURL: 'http://p1.meituan.net/codeman/799087624091d1d43768b7da396d4a122532.png',
	        title: '分享标题'
	    });
	 */
	
	module.exports = function (channelParam, configParam, successCallback, failCallback) {
	    if (false) {
	        debug('param channelParam is %j', channelParam);
	        debug('param configParam is %j', configParam);
	    }
	    var p = new Promise(function (resolve, reject) {
	        var data = {
	            'sinaweibo': 1,
	            'qzone': 2,
	            'qqweibo': 4,
	            'renren': 8,
	            'kaixin': 16,
	            'sms': 32,
	            'email': 64,
	            'weixin': 128,
	            'weixinfriends': 256,
	            'qqclient': 512,
	            'all': -1
	        };
	        var params = {};
	        var channel = channelParam || [];
	        var config = configParam || {};
	        var channelNumber = 0;
	        var i;
	        var num;
	        var d;
	
	        if (channel && Object.prototype.toString.call(channel) == "[object Array]") {
	            for (var i = 0, len = channel.length; i < len; i++) {
	                d = channel[i];
	                num = data[d.toLowerCase()];
	                channelNumber += num;
	                if (config['content_' + d]) {
	                    params['content_' + num] = config['content_' + d];
	                }
	            }
	            if (config.cid) {
	                params.cid = config.cid;
	            }
	            params.channel = channelNumber;
	            params.content = config.content;
	            params.detailURL = config.detailURL;
	            params.imageURL = config.imageURL;
	            params.title = config.title;
	            params.callback = function (returnData) {
	                if (returnData && returnData.status === 'COMPLETE') {
	                    if (typeof successCallback === 'function') {
	                        successCallback(returnData);
	                    }
	                } else {
	                    if (typeof failCallback === 'function') {
	                        failCallback(returnData);
	                    }
	                }
	                resolve(returnData);
	                return false;
	            };
	            _invoke('share', 'common_share', params);
	        }
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:share:disableNavButton');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * share.disableNavButton 禁用导航栏分享按钮
	 *
	 * 支持版本
	 * + iHotel/7.0+
	 *
	 * @memberof share
	 * @static
	 * @name disableNavButton
	 * @return {Undefined}
	 * @example
	 *  hbnb.share.disableNavButton();
	 */
	
	module.exports = function () {
	    if (false) {
	        debug('called');
	    }
	    var p = new Promise(function (resolve, reject) {
	        _invoke('share', 'disable_nav_share_button', {});
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name share
	 */
	
	// 激活导航栏分享按钮
	
	exports.activeNavButton = __webpack_require__(50);
	
	// 禁用导航栏分享按钮
	exports.disableNavButton = __webpack_require__(52);
	
	// 调用本地分享
	exports.callLocal = __webpack_require__(51);

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:storage:getItem');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 客户端存储／查
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof storage
	 * @static
	 * @name getItem
	 * @return {Promise<val>}
	 * @example
	 *  hbnb.storage.getItem('key')
	 *      .then(function(value) {
	 *          value = '' || null;
	 *      });
	 */
	module.exports = function (key) {
	    if (false) {
	        debug('key is %s', key);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('storage', 'get_item', {
	            key: key,
	            callback: function callback(val) {
	                if (false) {
	                    debug('value is %j', val);
	                }
	
	                if (val && val.value) {
	                    resolve(val.value);
	                } else {
	                    resolve(null);
	                }
	            }
	        });
	    });
	
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name storage
	 */
	
	exports.getItem = __webpack_require__(54);
	exports.setItem = __webpack_require__(57);
	exports.removeItem = __webpack_require__(56);
	exports.setResult = __webpack_require__(58);

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:storage:removeItem');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 客户端存储／删
	 *
	 * 客户端调用是异步的，不保证接下去调用 `hbnb.storage.getItem` 能立刻获取最新值
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof storage
	 * @static
	 * @name removeItem
	 * @return {Undefined}
	 * @example
	 *  hbnb.storage.removeItem('key');
	 */
	module.exports = function (key) {
	    if (false) {
	        debug('key is %s', key);
	    }
	
	    _invoke('storage', 'remove_item', {
	        key: key
	    });
	};

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:storage:setItem');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 客户端存储／增、改
	 *
	 * 客户端调用是异步的，不保证接下去调用 `hbnb.storage.getItem` 能立刻获取最新值
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof storage
	 * @static
	 * @name setItem
	 * @return {Undefined}
	 * @example
	 *  hbnb.storage.setItem('key', 'value');
	 */
	module.exports = function (key, val) {
	    if (false) {
	        debug('key is %s, value is %s', key, val.toString(), val);
	    }
	
	    _invoke('storage', 'set_item', {
	        key: key,
	        value: val.toString()
	    });
	};

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:closeAll');
	}
	
	var _invoke = __webpack_require__(1);
	var env = __webpack_require__(3);
	var versionCompare = __webpack_require__(4);
	
	/**
	 * 适用的场景是native打开H5的页面选择学校、城市
	 *
	 * 支持版本
	 * + Android
	 * + iHotel/6.9+
	 *
	 * @memberof storage
	 * @static
	 * @name setResult
	 * @param {Object} obj
	 * @return {Undefined}
	 * @example
	 *  hbnb.storage.setResult({id: "45", name: "广西"});
	 */
	module.exports = function (params) {
	    if (false) {
	        debug('url list %s', params);
	    }
	
	    if (env.platform === 'android' && versionCompare(env.appVersion, '6.9') >= 0) {
	        _invoke('inject', 'set_result', params);
	    } else {
	        // no op
	    }
	};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name thirdApps
	 */
	
	exports.installed = __webpack_require__(60);

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	var assert;
	if (false) {
	    debug = require('debug')('hbnb:module:thirdApps:installed');
	    assert = require('assert');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 检查第三方软件安装情况
	 *
	 * 目前支持支付宝（`alipay`）
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof thirdApps
	 * @static
	 * @name installed
	 * @param {String} appName 软件名
	 * @return {Promise<status>}
	 * @example
	 *  var hbnb = request('@hfe/hbnb');
	 *  hbnb.thirdApps.installed('alipay')
	 *      .then(function(status) {
	 *          status = true || false
	 *      });
	 */
	module.exports = function (appName) {
	    if (false) {
	        debug('app is %s', appName);
	        assert(['alipay'].indexOf(appName) >= 0);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('third_apps', 'installed', {
	            appName: appName,
	            callback: function callback(status) {
	                if (false) {
	                    debug('status is %j', status);
	                }
	
	                if (status && status.installed) {
	                    resolve(true);
	                } else {
	                    resolve(false);
	                }
	            }
	        });
	    });
	
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:tower:commentCallback');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 专题评论成功通知
	 *
	 * 专题评论成功后，通知客户端，无返回数据
	 *
	 * 支持版本
	 * + iTower/0.4+
	 *
	 * @memberof tower
	 * @static
	 * @name sendTopicCommentSuccess
	 * @return {Promise<string | err>}
	 * @example
	 *  hbnb.tower.commentCallback();
	 */
	
	module.exports = function (cb, eb) {
	    return new Promise(function (resolve, reject) {
	        _invoke('tower', 'sendTopicCommentSuccess', {
	            callback: function callback(result) {
	                if (false) {
	                    debug('comment callback result is %j', result, result);
	                }
	                resolve(result);
	            },
	            errback: reject
	        });
	    });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:tower:comment');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 打开native评论输入界面
	 *
	 * 支持版本
	 * + MtLvxing/1.3+
	 *
	 * @memberof tower
	 * @static
	 * @name comment
	 * @param {Object} opts
	 * @return {Promise<object | err>}
	 * @example
	 *  hbnb.tower.comment({
	 *          type: 'simple',
	 *          placeholder: '请在此输入',
	 *          content: '评论内容',
	 *          limit: 350,
	 *          buttonText: '发送',
	 *      })
	 *      .then(function(result) {
	 *          result = {
	 *              status: 0,
	 *              content: '用户输入的内容',
	 *          }
	 *      })
	 *      .catch(function(err) {
	 *          err = {
	 *              message: "fail",
	 *              status: -1
	 *          }
	 *      });
	 */
	
	module.exports = function (data) {
	    var p = new Promise(function (resolve, reject) {
	        _invoke('tower', 'comment', {
	            type: data.type || 'simple',
	            placeholder: data.placeholder || '',
	            content: data.content || '',
	            limit: data.limit || null,
	            buttonText: data.buttonText,
	
	            callback: function callback(result) {
	                if (false) {
	                    debug('comment result is %j', result);
	                }
	                resolve(result);
	            },
	            errback: reject
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:tower:getUuid');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取用户设备信息
	 *
	 * 目前主要用来获得UUID
	 *
	 * 支持版本
	 * + iTower/0.4+
	 *
	 * @memberof tower
	 * @static
	 * @name getUuid
	 * @return {Promise<string | err>}
	 * @example
	 *  hbnb.tower.getUuid()
	 *      .then(function(uuid) {
	 *          uuid = {
	 *              UUID: "xxxxxxxxx"
	 *          };
	 *      })
	 *      .catch(function(err) {
	 *          err = {
	 *              status: -1
	 *          };
	 *      });
	 */
	
	module.exports = function (cb, eb) {
	    return new Promise(function (resolve, reject) {
	        _invoke('tower', 'get_uuid', {
	            callback: function callback(result) {
	                if (false) {
	                    debug('uuid is %j', result, result);
	                }
	                resolve(result.UUID);
	            },
	            errback: reject
	        });
	    });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name Tower
	 */
	
	exports.getUuid = __webpack_require__(63);
	exports.commentCallback = __webpack_require__(61);
	exports.comment = __webpack_require__(62);
	exports.shareConfig = __webpack_require__(65);
	exports.checkNickname = __webpack_require__(66);

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:tower:shareConfig');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * Webview 页面分享功能
	 *
	 * 在App中将页面分享到微信、朋友圈、微博
	 *
	 * 支持版本
	 * + iTower/1.3+
	 *
	 * @memberof tower
	 * @static
	 * @name shareConfig
	 * @param {String} name
	 * @param {Object} opts
	 * @return {Promise<string | err>}
	 * @example
	 *  hbnb.tower.shareConfig('weixin', {
	 *      title: '页面名称',
	 *      desc: '内容',
	 *      imgUrl: 'http://xxx.jpg',
	 *      link: 'http://www.com',
	 *  }).then().catch();
	 */
	
	module.exports = function (name, data) {
	    return new Promise(function (resolve, reject) {
	        _invoke('tower', 'share_config_' + name, {
	            title: data.title,
	            desc: data.desc,
	            imgUrl: data.imgUrl,
	            link: data.link,
	            callback: function callback(result) {
	                if (false) {
	                    debug('share_config result is %j', result);
	                }
	                resolve(result);
	            },
	            errback: reject
	        });
	    });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:tower:userCheckNickname');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 *
	 * 检查设置用户昵称
	 *
	 * http://wiki.sankuai.com/pages/viewpage.action?pageId=500753388
	 *
	 * 支持版本
	 * + iTower/1.3+
	 *
	 * @memberof tower
	 * @static
	 * @name checkNickname
	 * @return {Promise<string | err>}
	 * @example
	 *  hbnb.tower.checkNickname();
	 */
	
	module.exports = function () {
	    return new Promise(function (resolve, reject) {
	        _invoke('tower', 'user_check_nickname', {
	            callback: function callback(result) {
	                if (false) {
	                    debug('check nickname callback result is %j', result);
	                }
	                resolve(result);
	            },
	            errback: reject
	        });
	    });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:gotoOrderDetail');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 进入火车票订单详情页面
	 *
	 * 点击后退时会返回订单列表页面，再后退会返回我的页面
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof train
	 * @static
	 * @name gotoOrderDetail
	 * @param {String} url 订单页面地址
	 * @param {String} orderListUrl 订单列表页面地址
	 * @return {Undefined}
	 * @example
	 *  hbnb.train.gotoOrderDetail(
	 *      'url'
	 *      'orderListUrl'
	 *  );
	 */
	module.exports = function (url, orderListUrl) {
	    if (false) {
	        debug('url is %s', url);
	        debug('orderListUrl is %s', orderListUrl);
	    }
	
	    _invoke('train', 'goto_order_detail', {
	        url: url,
	        orderListUrl: orderListUrl
	    });
	};

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:gotoOrderList');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 *
	 * @memberof train
	 * @static
	 * @name gotoOrderList
	 * @param {String} url 订单列表地址
	 * @return {Undefined}
	 * @example
	 *  hbnb.train.gotoOrderList('url');
	 */
	module.exports = function (url) {
	    if (false) {
	        debug('url is %s', url);
	    }
	
	    _invoke('train', 'goto_order_list', {
	        url: url
	    });
	};

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name train
	 */
	
	exports.gotoOrderDetail = __webpack_require__(67);
	exports.selectDate = __webpack_require__(74);
	exports.selectStation = __webpack_require__(75);
	exports.timeTable = __webpack_require__(78);
	
	exports.selectDateStudent = __webpack_require__(73);
	exports.selectDateRush = __webpack_require__(72);
	exports.timeRange = __webpack_require__(77);
	exports.gotoOrderList = __webpack_require__(68);
	exports.multiSelect = __webpack_require__(70);
	exports.selectTrains = __webpack_require__(76);
	exports.ringtone = __webpack_require__(71);
	exports.vibrate = __webpack_require__(79);

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:multiSelect');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 *
	 * @memberof train
	 * @static
	 * @name multiSelect
	 * @param {Array} menus 菜单
	 * @return {Promise}
	 * @example
	 *  hbnb.train.multiSelect([{
	 *      label: '',
	 *      value: '',
	 *      active: false
	 *  }])
	 *      .then(function(menus) {
	 *          menus = [{
	 *              label: '',
	 *              value: '',
	 *              active: false
	 *          }]
	 *      });
	 */
	module.exports = function (menus) {
	    if (false) {
	        debug('menus is %j', menus);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('train', 'multi_select', {
	            menus: menus,
	            callback: function callback(menus) {
	                resolve(menus);
	            }
	        });
	    });
	
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:ringtone');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 *
	 * @memberof train
	 * @static
	 * @name ringtone
	 * @param {Number} loop 时长
	 * @return {Promise}
	 * @example
	 *  hbnb.train.ringtone()
	 *      .then(function() {});
	 */
	module.exports = function (duration) {
	    if (false) {
	        debug('duration is %s', duration);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('train', 'ringtone', {
	            duration: duration,
	            callback: function callback() {
	                resolve();
	            },
	            errback: function errback() {
	                reject();
	            }
	        });
	    });
	
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:selectDateRush');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选择出行日期
	 *
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof train
	 * @static
	 * @name selectDateRush
	 * @param {Object} opts 选项
	 * @return {Promise<date>}
	 * @example
	 *  hbnb.train.selectDateRush({
	 *      date: '2015-10-19',
	 *      days: 60,
	 *      buyRange: [{
	 *          start: '2015-11-11',
	 *          finish: '2015-12-11'
	 *      }],
	 *      reserveRange: [{
	 *          start: '2015-12-12',
	 *          finish: '2015-12-31'
	 *      }]
	 *  })
	 *      .then(function(date) {
	 *          date = '2015-12-13'
	 *      });
	 */
	module.exports = function (opts) {
	    if (false) {
	        debug('opts is %j', opts);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        opts.callback = function (date) {
	            resolve(date.date);
	        };
	        _invoke('train', 'select_date_rush', opts);
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:selectDateStudent');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选择出行日期
	 *
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof train
	 * @static
	 * @name selectDateStudent
	 * @param {Object} opts 选项
	 * @return {Promise<date>}
	 * @example
	 *  hbnb.train.selectDateStudent({
	 *      date: '2015-10-19',
	 *      days: 60,
	 *      range: [{
	 *          start: '2015-10-20',
	 *          finish: '2015-12-30'
	 *      }],
	 *      tips: '预售期为60天，60天外不可购买'
	 *  })
	 *      .then(function(date) {
	 *          date = '2015-12-13'
	 *      });
	 */
	module.exports = function (opts) {
	    if (false) {
	        debug('opts is %j', opts);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        opts.callback = function (date) {
	            resolve(date.date);
	        };
	        _invoke('train', 'select_date_student', opts);
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:selectDate');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选择出行日期
	 *
	 * TODO: 补全参数和返回值
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof train
	 * @static
	 * @name selectDate
	 * @param {String} date 当前日期
	 * @param {Number} days 日期 6.2
	 * @param {String} tips 底部提示 6.2
	 * @return {Promise<date>}
	 * @example
	 *  hbnb.train.selectDate('date', '60', '预售期为60天，60天外不可购买')
	 *      .then(function(date) {
	 *          date = '2015-02-02'
	 *      });
	 */
	module.exports = function (date, days, tips) {
	    if (false) {
	        debug('date is %s', date);
	        debug('days is %s', days);
	        debug('tips is %s', tips);
	    }
	
	    if (days === undefined) days = 60;
	    if (tips === undefined) tips = '预售期为60天，60天外不可购买';
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('train', 'select_date', {
	            date: date,
	            days: days,
	            tips: tips,
	            callback: function callback(date) {
	                resolve(date.date);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:selectStation');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选择火车站
	 *
	 * TODO: 补全参数和返回值
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof train
	 * @static
	 * @name selectStation
	 * @param {String} stationCode 当前火车站
	 * @param {String} stationType 类型
	 * @return {Promise<station>}
	 * @example
	 *  hbnb.train.selectStation('code', 'type')
	 *      .then(function(station) {
	 *      });
	 */
	module.exports = function (stationCode, stationType) {
	    if (false) {
	        debug('station code is %s', stationCode);
	        debug('station type is %s', stationType);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('train', 'select_station', {
	            stationCode: stationCode,
	            stationType: stationType,
	            callback: function callback(station) {
	                resolve(station);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:selectTrains');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 *
	 * @memberof train
	 * @static
	 * @name selectTrains
	 * @param {Array} menus 菜单
	 * @return {Promise}
	 * @example
	 *  hbnb.train.selectTrains([{
	 *      label: '',
	 *      subLabel: '',
	 *      description: ''
	 *      value: '',
	 *      active: false
	 *  }])
	 *      .then(function(menus) {
	 *          menus = [{
	 *              label: '',
	 *              value: '',
	 *              active: false
	 *          }]
	 *      });
	 */
	module.exports = function (menus) {
	    if (false) {
	        debug('menus is %j', menus);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('train', 'select_trains', {
	            menus: menus,
	            callback: function callback(menus) {
	                resolve(menus);
	            }
	        });
	    });
	
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:timeRange');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选择出行日期
	 *
	 *
	 * @memberof train
	 * @static
	 * @name timeRange
	 * @param {Number} start 开始时间
	 * @param {Number} end 结束时间
	 * @return {Promise<date>}
	 * @example
	 *  hbnb.train.timeRange(12, 15)
	 *      .then(function(range) {
	 *          range = {
	 *              start: 0,
	 *              end: 24
	 *          }
	 *      });
	 */
	module.exports = function (start, end) {
	    if (false) {
	        debug('start is %s', start);
	        debug('end is %s', end);
	    }
	
	    if (start === undefined) {
	        start = 0;
	        end = 24;
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('train', 'time_range', {
	            start: start,
	            end: end,
	            callback: function callback(range) {
	                resolve(range);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:timeTable');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 展示列车时刻表
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof train
	 * @static
	 * @name timeTable
	 * @param {Object} stations
	 * @return {Undefined}
	 * @example
	 *  hbnb.train.timeTable([{
	 *      type: 'inside/outside/from/to',
	 *      value: [
	 *          'station_no',
	 *          'station_name',
	 *          'arrive_time',
	 *          'start_time'
	 *          'stopover_time'
	 *      ]
	 *  }]);
	 */
	module.exports = function (stations) {
	    if (false) {
	        debug('stations is %j', stations);
	    }
	
	    _invoke('train', 'time_table', {
	        title: '列车时刻表',
	        header: ['', '车站', '到达', '发车', '停留'],
	        rows: stations
	    });
	};

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:train:vibrate');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 *
	 * @memberof train
	 * @static
	 * @name vibrate
	 * @param {Number} duration 震动时长
	 * @return {Promise}
	 * @example
	 *  hbnb.train.vibrate(1000)
	 *      .then(function() {});
	 */
	module.exports = function (duration) {
	    if (false) {
	        debug('duration is %s', duration);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('train', 'vibrate', {
	            duration: duration,
	            callback: function callback() {
	                resolve();
	            },
	            errback: function errback() {
	                reject();
	            }
	        });
	    });
	
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:travelmerchant:get_pos_deviceid');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取pos 设备id
	 *
	 * @memberof travel
	 * @static
	 * @name getPosDeviceId
	 * @return {Promise}
	 * @example
	 *  hbnb.travel.getPosDeviceId()
	 *      .then(function(resp) {
	 *          resp = {
	 *              deviceid: "xxxxx"//如果返回deviceid为空，则表示不是pos机
	 *          }
	 *      });
	 */
	module.exports = function () {
	    if (false) {
	        debug('getDeviceId  %s');
	    }
	    var p = new Promise(function (resolve, reject) {
	        _invoke('travelmerchant', 'get_pos_deviceid', {
	            callback: function callback(resp) {
	                resolve(resp);
	            },
	            complete: function complete(resp) {
	                reject(resp);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:travelmerchant:print');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 获取pos 设备id
	 *
	 * @memberof travel
	 * @static
	 * @name print
	 * @param {Array} content
	 * @return {Promise}
	 * @example
	 *  hbnb.travel.print([
	 *    {
	        "content":"xxx",
	        "gravity":"left", //对齐 left/right/center
	        "textsize":"small" //字体大小  small/medium/large
	      }
	 *  ])
	 *      .then(function(resp) {
	 *          resp = {
	 *              status: 0,
	 *              message: '成功'
	 *          }
	 *      });
	 */
	module.exports = function (content) {
	    if (false) {
	        debug('content is %s', content);
	    }
	    content = content || [];
	    var p = new Promise(function (resolve, reject) {
	        _invoke('travelmerchant', 'print', {
	            content: content,
	            callback: function callback(resp) {
	                resolve(resp);
	            },
	            complete: function complete(resp) {
	                reject(resp);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:travelmerchant:check_printer_state');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 打印状态
	 *
	 * @memberof travel
	 * @static
	 * @name check_printer_state
	 * @return {Promise}
	 * @example
	 *  hbnb.travel.printerState()
	 *      .then(function(resp) {
	 *          resp = {
	 *              status:""//一共五种状态：OK,NO_PAPER（缺纸）,HIGH_TEMP（过热）,ERROR(过热且缺纸),UNKNOW(未知)
	 *          }
	 *      });
	 */
	module.exports = function () {
	    if (false) {
	        //debug('city is %s');
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('travelmerchant', 'check_printer_state', {
	            callback: function callback(resp) {
	                resolve(resp);
	            },
	            complete: function complete(resp) {
	                reject(resp);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name travel
	 */
	
	// 选择城市
	
	exports.selectCity = __webpack_require__(84);
	
	// 设置客户端大G埋点
	exports.setGdata = __webpack_require__(85);
	
	// 获取pos机id
	exports.getPosDeviceId = __webpack_require__(80);
	
	// 获取pos机打印状态
	exports.printerState = __webpack_require__(82);
	
	// 打印
	exports.print = __webpack_require__(81);

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:travel:selectCity');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选择城市
	 *
	 *
	 * 支持版本
	 * + iTrip/6.9+
	 *
	 *
	 * @memberof travel
	 * @static
	 * @name selectCity
	 * @param {String} city
	 * @return {Promise}
	 * @example
	 *  hbnb.travel.selectCity('city')
	 *      .then(function(city) {
	 *          city = {
	 *              cityName: '',
	 *              cityID: ''
	 *          }
	 *      });
	 */
	module.exports = function (city) {
	    if (false) {
	        debug('city is %s', city);
	    }
	    city = city || '';
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('travel', 'select_city', {
	            original: city,
	            callback: function callback(city) {
	                resolve(city);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:travel:setGdata');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 设置客户端大G埋点
	 *
	 *
	 * 支持版本
	 * + iTrip/6.9+
	 *
	 *
	 * @memberof travel
	 * @static
	 * @name setGdata
	 * @param {String} bigG
	 * @return {Promise}
	 * @example
	 *  hbnb.travel.setGdata('bigG')
	 *      .then(function(bigG) {
	 *          bigG = {
	 *              status: 1          //0: 失败；1:成功
	 *          }
	 *      });
	 */
	module.exports = function (bigG) {
	    if (false) {
	        debug('bigG is %s', bigG);
	    }
	    bigG = bigG || '';
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('travel', 'set_g_data', {
	            gdata: bigG,
	            callback: function callback(bigG) {
	                resolve(bigG);
	            }
	        });
	    });
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:ui:alert');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 单按钮弹窗，类似 alert
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof ui
	 * @static
	 * @name alert
	 * @param {String} message 弹窗信息
	 * @param {String} [title] 弹窗标题，可选
	 * @param {Array} button 按钮
	 * @return {Undefined}
	 * @example
	 *  hbnb.ui.alert('message', ['title'], [{
	 *      label: '确定',
	 *      callback: function() {
	 *          console.log('clicked');
	 *      }
	 *  }]);
	 */
	module.exports = function (message, title, button) {
	    if (false) {
	        debug('message is %j', message);
	        debug('title is %j', title);
	        debug('button is %j', button);
	    }
	
	    if (!button) {
	        button = title;
	        title = '';
	    }
	
	    // fix: button should be an array
	    if (Object.prototype.toString.call(button) === "[object Object]") {
	        button = [button];
	    }
	
	    _invoke('ui', 'alert', {
	        message: message,
	        title: title,
	        buttons: button
	    });
	};

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:ui:autoLock');
	}
	
	var _invoke = __webpack_require__(1);
	var env = __webpack_require__(3);
	var versionCompare = __webpack_require__(4);
	
	/**
	 * 不允许自动锁屏
	 *
	 * 支持版本
	 * + iHotel/6.5+
	 *
	 * @memberof ui
	 * @static
	 * @name autoLock
	 * @param {Boolean} enable true表示禁止自动锁屏
	 * @return {Undefined}
	 * @example
	 *  hbnb.ui.autoLock();
	 */
	module.exports = function (enable) {
	    if (false) {
	        debug('enable', enable);
	    }
	
	    if (versionCompare(env.appVersion, '6.5') >= 0) {
	        _invoke('ui', 'auto_lock', {
	            enable: enable
	        });
	    }
	};

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:ui:confirm');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 双按钮弹窗，类似 confirm
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof ui
	 * @static
	 * @name confirm
	 * @param {String} message 弹窗信息
	 * @param {String} [title] 弹窗标题，可选
	 * @param {Object} leftButton 左按钮
	 * @param {Object} rightButton 右按钮
	 * @return {Undefined}
	 * @example
	 *  hbnb.ui.confirm('message', 'title', {
	 *      label: '确定',
	 *      callback: function() {}
	 *  }, {
	 *      label: '取消',
	 *      callback: function() {}
	 *  });
	 */
	module.exports = function (message, title, leftButton, rightButton) {
	    if (false) {
	        debug('message is %j', message);
	        debug('title is %j', title);
	        debug('left button is %j', leftButton);
	        debug('right button is %j', rightButton);
	    }
	
	    if (!rightButton) {
	        rightButton = leftButton;
	        leftButton = title;
	        title = '';
	    }
	
	    _invoke('ui', 'alert', {
	        message: message,
	        title: title,
	        buttons: [leftButton, rightButton]
	    });
	};

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name ui
	 */
	
	exports.loadingStart = __webpack_require__(90);
	exports.loadingStop = __webpack_require__(91);
	
	exports.toast = __webpack_require__(95);
	exports.alert = __webpack_require__(86);
	exports.confirm = __webpack_require__(88);
	
	exports.options = __webpack_require__(92);
	exports.singleSelect = __webpack_require__(94);
	
	exports.selectDate = __webpack_require__(93);
	exports.autoLock = __webpack_require__(87);

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:ui:loadingStart');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 开启加载动画
	 *
	 * 在关闭前多次调用存在 bug，需要业务方自己把握开启／关闭的配对关系
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof ui
	 * @static
	 * @name loadingStart
	 * @return {Undefined}
	 * @example
	 *  hbnb.ui.loadingStart();
	 */
	module.exports = function () {
	    if (false) {
	        debug('start');
	    }
	
	    _invoke('ui', 'loading_start');
	};

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:ui:loadingStop');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 关闭加载动画
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof ui
	 * @static
	 * @name loadingStop
	 * @return {Undefined}
	 * @example
	 *  hbnb.ui.loadingStop();
	 */
	module.exports = function () {
	    if (false) {
	        debug('stop');
	    }
	
	    _invoke('ui', 'loading_stop');
	};

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:ui:options');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 选项弹窗
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof ui
	 * @static
	 * @name options
	 * @param {Array} menus 选项数组
	 * @param {Object} cancel 取消按钮
	 * @return {Undefined}
	 * @example
	 *  hbnb.ui.options([{
	 *      label: 'option1',
	 *      callback: function() {}
	 *  }, {
	 *      label: 'option2',
	 *      callback: function() {}
	 *  }], {
	 *      label: 'cancel',
	 *      callback: function() {}
	 *  });
	 */
	module.exports = function (menus, cancel) {
	    if (false) {
	        debug('menus is %j', menus);
	        debug('cancel is %j', cancel);
	    }
	
	    _invoke('ui', 'options', {
	        menus: menus,
	        cancel: cancel
	    });
	};

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Promise) {'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:ui:singleDate');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 日期选择
	 *
	 * TODO: 补全示例
	 *
	 * 支持版本
	 * + iHotel/5.9.2+
	 *
	 * @memberof ui
	 * @static
	 * @name selectDate
	 * @param {String} current 当前日期
	 * @param {String} maxDate 最大可选日期
	 * @param {String} minDate 最小可选日期
	 * @return {Promise<date | err>}
	 * @example
	 *  hbnb.ui.selectDate('');
	 */
	module.exports = function (current, maxDate, minDate) {
	    if (false) {
	        debug('current is %s', current);
	        debug('maxDate is %s', maxDate);
	        debug('minDate is %s', minDate);
	    }
	
	    var p = new Promise(function (resolve, reject) {
	        _invoke('ui', 'select_date', {
	            original: current || '',
	            maxDate: maxDate,
	            minDate: minDate,
	            callback: function callback(data) {
	                resolve(data);
	            },
	            errback: function errback(err) {
	                reject(err);
	            }
	        });
	    });
	
	    return p;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:ui:singleSelect');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 单选框
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof ui
	 * @static
	 * @name singleSelect
	 * @param {Array} menus 选项数组
	 * @return {Undefined}
	 * @example
	 *  hbnb.ui.singleSelect([{
	 *      label: 'all',
	 *      active: true,
	 *      callback: function() {},
	 *  }, {
	 *      label: 'option 1',
	 *      active: false,
	 *      callback: function() {},
	 *  }, {
	 *      label: 'option 2',
	 *      active: false,
	 *      callback: function() {},
	 *  }]);
	 */
	module.exports = function (menus) {
	    if (false) {
	        debug('menus is %j', menus);
	    }
	
	    _invoke('ui', 'single_select', {
	        menus: menus
	    });
	};

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:ui:toast');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * toast 弹窗
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof ui
	 * @static
	 * @name toast
	 * @param {String} message 弹窗信息
	 * @param {Number} [time] toast 持续时间，单位 `ms`，可选，默认 3000
	 * @return {Undefined}
	 * @example
	 *  hbnb.ui.toast('message', 1000);
	 */
	
	module.exports = function (message, time) {
	    if (false) {
	        debug('message is %s', message);
	        debug('time is %s', time);
	    }
	
	    time = time || 3000;
	
	    _invoke('ui', 'toast', {
	        message: message,
	        time: time
	    });
	};

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:back');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 后退
	 *
	 * TODO: ANDROID 旧版实现有问题
	 *
	 * 支持版本
	 * + iHotel/?
	 *
	 * @memberof webview
	 * @static
	 * @name back
	 * @return {Undefined}
	 * @example
	 *  hbnb.webview.back();
	 */
	module.exports = function () {
	    if (false) {
	        debug('called');
	    }
	
	    _invoke('webview', 'back');
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:closeAll');
	}
	
	var _invoke = __webpack_require__(1);
	var env = __webpack_require__(3);
	var versionCompare = __webpack_require__(4);
	
	/**
	 * 适用的场景是抢票任务编辑，从任务列表不想回表单.
	 * ABCBC，在C页面closeAll([B, C])就退到页面A
	 *
	 * 与 `hbnb.webview.open` 配合使用
	 *
	 * 支持版本
	 * + Android
	 * + iHotel/6.5+
	 *
	 * @memberof webview
	 * @static
	 * @name closeAll
	 * @param {Array} urls 连续关闭的URL
	 * @return {Undefined}
	 * @example
	 *  hbnb.webview.closeAll([
	 *      '/qiangpiao/add/',
	 *      '/qiangpiao/list/'
	 *  ]);
	 */
	module.exports = function (urls) {
	    if (false) {
	        debug('url list %s', urls);
	    }
	
	    if (env.platform === 'android' && versionCompare(env.appVersion, '6.5') >= 0) {
	        _invoke('webview', 'close_all', {
	            urls: urls
	        });
	    } else {
	        _invoke('webview', 'close');
	    }
	};

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:close');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 关闭当前 webview
	 *
	 * 与 `hbnb.webivew.open` 配合使用
	 *
	 * TODO: ANDROID 旧版实现有问题
	 *
	 * 支持版本
	 * + iHotel/?
	 *
	 * @memberof webview
	 * @static
	 * @name close
	 * @return {Undefined}
	 * @example
	 *  hbnb.webview.close();
	 */
	module.exports = function () {
	    if (false) {
	        debug('called');
	    }
	
	    _invoke('webview', 'close');
	};

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:dismiss');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 关闭当前 modal
	 *
	 * 与 `hbnb.webivew.modal` 配合使用
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof webview
	 * @static
	 * @name dismiss
	 * @example
	 *  hbnb.webview.dismiss();
	 */
	module.exports = function () {
	    if (false) {
	        debug('called');
	    }
	
	    _invoke('webview', 'dismiss');
	};

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @name webview
	 */
	
	exports.open = __webpack_require__(102);
	exports.back = __webpack_require__(96);
	exports.close = __webpack_require__(98);
	exports.closeAll = __webpack_require__(97);
	
	exports.modal = __webpack_require__(101);
	exports.dismiss = __webpack_require__(99);
	
	exports.setTitle = __webpack_require__(106);
	exports.setMenus = __webpack_require__(105);
	exports.setComplexTitle = __webpack_require__(104);
	
	exports.setBackAction = __webpack_require__(103);

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:modal');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 打开 modal 弹窗
	 *
	 * 1. 与 `hbnb.webivew.dismiss` 配合使用
	 * 2. `modal` 弹窗内部不能继续调用 `modal` 弹窗，可以调用 `open`
	 * 3. `dimiss` 时会关闭弹窗，且 modal 的操作不会纪录到后退路径中
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof webview
	 * @static
	 * @name modal
	 * @param {String} url 页面地址
	 * @return {Undefined}
	 * @example
	 *  hbnb.webview.modal('http://i.meituan.com');
	 */
	module.exports = function (url) {
	    if (false) {
	        debug('url is %s', url);
	    }
	
	    _invoke('webview', 'modal', {
	        url: url
	    });
	};

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:open');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 打开新页面
	 *
	 * 与 `hbnb.webivew.close` 配合使用
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof webview
	 * @static
	 * @name open
	 * @param {String} url 页面地址
	 * @return {Undefined}
	 * @example
	 *  hbnb.webview.open('http://i.meituan.com');
	 */
	module.exports = function (url) {
	    if (false) {
	        debug('url is %s', url);
	    }
	
	    _invoke('webview', 'open', {
	        url: url
	    });
	};

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:setBackAction');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 修改后退操作
	 *
	 * 一旦设置该函数，用户点击后退时只会调用该函数而不会直接后退。
	 * 可在函数内调用 `hbnb.webview.back` 方法进行后退
	 *
	 * TODO: 支持版本
	 *
	 * 支持版本
	 * + iHotel/??
	 *
	 * @memberof webview
	 * @static
	 * @name setBackAction
	 * @param {Function} cb 点击后退按钮时执行的函数
	 * @return {Undefined}
	 * @example
	 *  hbnb.webview.setBackAction(function() {
	 *      // do something
	 *  });
	 */
	module.exports = function (cb) {
	    if (false) {
	        debug('callback is %s', cb);
	    }
	
	    _invoke('webview', 'set_navbar_back', {
	        callback: function callback() {
	            cb();
	            return false;
	        }
	    });
	};

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	var assert;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:setComplexTitle');
	    assert = require('assert');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 设置复杂标题
	 *
	 * 根据传入的 `type` 判断使用那种展示形式。
	 * 如果当前版本不支持 `type`，会回退到普通形式，只展示 `title`。
	 *
	 * 目前只支持上下双栏的主副标题 `type='two-row'`
	 *
	 * 支持版本
	 * + iHotel/5.9.2+
	 *
	 * @memberof webview
	 * @static
	 * @name setComplexTitle
	 * @param {Object} opts 标题设置
	 * @return {Undefined}
	 * @example
	 *  hbnb.webview.setComplexTitle({
	 *      type: 'two-row',
	 *      title: 'title',
	 *      subTitle: 'subTitle'
	 *  });
	 */
	module.exports = function (opts) {
	    if (false) {
	        debug('opts is %j', opts);
	        assert(opts.title);
	    }
	
	    _invoke('webview', 'set_complex_title', opts);
	};

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:setMenus');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 设置导航栏右侧按钮
	 *
	 * 目前支持 `icon`/`text` 两种类型的按钮
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof webview
	 * @static
	 * @name setMenus
	 * @param {Array} menus 按钮设置
	 * @return {Undefined}
	 * @example
	 *  hbnb.webview.setMenus([{
	 *      type: 'text',
	 *      text: '确定',
	 *      color: '#cccccc',
	 *      callback: function() {console.log('clicked'); return false;}
	 *  }, {
	 *      type: 'icon',
	 *      icon: 'url',
	 *      callback: function() {console.log('clicked'); return false;}
	 *  ]);
	 */
	module.exports = function (menus) {
	    if (false) {
	        debug('menus is %j', menus);
	    }
	
	    _invoke('webview', 'set_navbar_menus', {
	        menus: menus
	    });
	};

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debug;
	if (false) {
	    debug = require('debug')('hbnb:module:webview:setTitle');
	}
	
	var _invoke = __webpack_require__(1);
	
	/**
	 * 修改标题
	 *
	 * 支持版本
	 * + iHotel/5.8+
	 *
	 * @memberof webview
	 * @static
	 * @name setTitle
	 * @param {String} title 标题
	 * @return {Undefined}
	 * @example
	 *  hbnb.webview.setTitle('new title');
	 */
	module.exports = function (title) {
	    if (false) {
	        debug('title is %s', title);
	    }
	
	    _invoke('webview', 'set_title', {
	        title: title
	    });
	};

/***/ }
/******/ ])
});
;