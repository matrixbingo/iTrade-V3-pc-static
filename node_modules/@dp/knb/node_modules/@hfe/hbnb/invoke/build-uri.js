'use strict';

var debug;
if (process.env.NODE_ENV !== 'production') {
    debug = require('debug')('hbnb:invoke:build-uri');
}

var _id = 0;
var _buildCallback = function(fn) {
    var fnID = (new Date().getTime() + '_' + (++_id));
    var callbackName = 'HBNB_CALLBACK_' + fnID;
    window[callbackName] = (function(fn, callbackName) {
        var innerFN = function() {
            var r = fn.apply(null, arguments);
            if (r !== false) {
                delete window[callbackName];
            }
        };
        return innerFN;
    })(fn, callbackName);

    if (process.env.NODE_ENV !== 'production') {
        //debug('window["%s"] call "%s"', callbackName, fn);
    }

    return callbackName;
};

var _processParameters = function(key, value) {
    if (typeof value === 'function') {
        return _buildCallback(value);
    } else {
        return value;
    }
};

var buildURI = function(protocol, moduleName, methodName, parameters) {
    if (process.env.NODE_ENV !== 'production') {
        debug('protocol = %s', protocol);
        debug('module = %s', moduleName);
        debug('method = %s', methodName);
        debug('before process, parameters is %j', parameters);
    }

    var params = encodeURIComponent(JSON.stringify(parameters, _processParameters));
    if (process.env.NODE_ENV !== 'production') {
        debug('after encode, parameters is %s', params);
    }

    var uri = protocol + '//' + moduleName + '/' + methodName + '?params=' + params;

    if (process.env.NODE_ENV !== 'production') {
        debug('uri = %s', uri);
    }

    return uri;
};

module.exports = buildURI;
module.exports.processParams = _processParameters; // for legency-lvyou
