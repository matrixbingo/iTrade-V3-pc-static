'use strict';
(function (Host) {
  var core = require('./lib/core');
  var util = require('./lib/util');
  var apis = require('./lib/apis');

  require('./lib/errortrace');
  
  var patchVersion = function(version, patch) {
    if (core.Semver.gte(util.appVersion, version)) {
        core.patchForType(util.appVersion, patch);
    }
  };

  patchVersion('7.0.0', require('./lib/patch/patch-7.0.0'));
  patchVersion('7.1.0', require('./lib/patch/patch-7.1.0'));
  patchVersion('7.2.0', require('./lib/patch/patch-7.2.0'));
  patchVersion('7.5.0', require('./lib/patch/patch-7.5.0'));
  patchVersion('7.6.0', require('./lib/patch/patch-7.6.0'));
  patchVersion('7.8.0', require('./lib/patch/patch-7.8.0'));
  patchVersion('7.9.1', require('./lib/patch/patch-7.9.1'));
  patchVersion('7.9.2', require('./lib/patch/patch-7.9.2'));
  patchVersion('7.9.4', require('./lib/patch/patch-7.9.4'));
  patchVersion('7.9.6', require('./lib/patch/patch-7.9.6'));
  patchVersion('8.0.0', require('./lib/patch/patch-8.0.0'));
  patchVersion('8.0.4', require('./lib/patch/patch-8.0.4'));
  patchVersion('8.0.6', require('./lib/patch/patch-8.0.6'));
  patchVersion('8.1.0', require('./lib/patch/patch-8.1.0'));
  patchVersion('8.1.2', require('./lib/patch/patch-8.1.2'));
  patchVersion('8.1.4', require('./lib/patch/patch-8.1.4'));
  patchVersion('8.1.6', require('./lib/patch/patch-8.1.6'));

  core.apis = apis;
  core.decorate();

  apis.forEach(function (api) {
    if (!core[api]) {
      core[api] = core._notImplemented;
    }
  });

  core.__version__ = require('./lib/version');
  core.__type__ = require('./lib/type');
  // Export DPApp object, if support AMD, CMD, CommonJS.
  if (typeof module !== 'undefined') {
    module.exports = core;
  }
  // Export DPApp object to Host
  if (typeof Host !== 'undefined') {
    if(Host.DPApp){
      Host.DPApp = core.merge(Host.DPApp, core);
    }else{
      Host.DPApp = core;
    }
  }

}(window));