'use strict';
var util = require('../util');

var core = {
  appVersion: '8.0.4',
  thirdLogin: function(opt) {
    var type = opt.type;
    var url;
    switch (type){
      case 1:
        url = location.protocol + '//m.dianping.com/auth/app?ft=15&sso=true';
        break;
      case 2:
        url = location.protocol + '//m.dianping.com/auth/app?ft=6&sso=true&redir=';
        break;
      case 3:
        url = location.protocol + '//m.dianping.com/auth/app?ft=5&ssp=true&redir=';
        break;
      case 4:
        url = location.protocol + '//m.dianping.com/auth/app?ft=2&source=1&sso=true&redir=';
        break;
    }
    this.openScheme({
      url: 'dianping://loginweb?url=' + encodeURIComponent(url) + '&isFromNative=true',
    });
  },
  getCX: function(opt) {
    var success = opt.success;
    opt.success = function(res) {
      if (res.fingerprint) {
        res.cx = res.fingerprint;
      }
      success(res);
    }
    this._send('getCX', opt);
  },
  uploadImage: function(opts) {
    var success = opts.success;
    var fail = opts.fail;
    var handle = opts.handle;

    if (opts.localId || opts.localIds) {

      //兼容业务对localId单图上传的支持
      if (opts.localId) {
        opts.localIds = [opts.localId];
        delete opts.localId;
      }
      
      opts.success = function(res) {
        var obj = {};
        var _localId;
        if (res.ret) {
          res.ret.forEach(function(picItem, index) {
            picItem.localId = picItem.localId || opts.localIds[index];
            
            _localId = picItem.localId;
            obj[_localId] = picItem.picKey;
          });
          res.photoInfos = res.ret;
          delete res.ret;
        }
        res.picKeys = obj;
        success(res);
      };

      this._send('uploadPhoto', opts); 

    } else {
      this._sendMessage('uploadImage', opts, function(result) {
        var status = result.status;
        if (status == 'fail') {
          fail && fail(result);
          return;
        } else {
          handle && handle(result);
        }
      });
    }
  }
};
if (util.osName === 'ios') {//getOSName()
  core.setStatusBarStyle = function(opt) {
    if (opt.style === undefined) {
      opt.style = 0;
    }
    this._send('setStatusBarStyle', opt);
  }
}
module.exports = core;