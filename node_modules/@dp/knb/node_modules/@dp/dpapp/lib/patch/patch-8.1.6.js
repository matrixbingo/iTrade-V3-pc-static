var util = require('../util');

var Patch = {
	appVersion: '8.1.6',
	pickCity: function(opts) {
		var type = opts && opts.type;
		if (type === undefined || type == 0 || type == 1) {
			this._send('pickCity', opts);
		} else {
			console.log('param error');
			typeof opts.fail == 'function' && opts.fail();
		}
	},
	analyticsTag: function(opts) {
		if (opts && opts.channel && opts.key && opts.value) {
			typeof opts.value == 'string' || (opts.value = JSON.stringify(opts.value));
			this._send('analyticsTag', opts);
		} else {
			console.log('param error');
			typeof opts.fail == 'function' && opts.fail();
		}
	}
};

if (util.osName === 'ios') {
	Patch.setPullDown = function(opts) {
		var callCount = 0;
		var success = opts.success;
		opts.success = function(res) {
			//解决8.1.6 ios下无法区分success和handle事件的BUG
			callCount++;
			if (callCount > 1) {
				opts.handle(res);
			}else{
				success(res);
			}
		}
		this._send('setPullDown',opts);
	};
	
	Patch.getNetworkType = function(opts) {
		var success = opts.success;
		opts.success = function(res) {
			res.networkType = res.type;
			delete res.type;
			success(res);
		};
		this._send('getNetworkType',opts);
	};
}

module.exports = Patch;