'use strict';
var util = require('../util');

module.exports = {
  appVersion: '7.0',
  _parseFeed: function(f){
    var feed;
    if (!f) {
      return 0xff;
    } else if (f.constructor.toString().indexOf('Array') >= 0) {
      feed = [0, 0, 0, 0, 0, 0, 0, 0];
      f.forEach(function(pos) {
        feed[pos] = 1;
      });
      return parseInt(feed.join(''), 2);
    }
  },
  share : function(opts){
    opts.feed = this._parseFeed(opts.feed);
    opts.url = this._tidyUrlParams(opts.url);
    this._sendMessage('share', opts);
  },
  initShare: function(opt){
    var success = opt.success;
    var fail = opt.fail;
    var src = 'dpshare://_?content=';
    src += encodeURIComponent(JSON.stringify({
      title: opt.title,
      desc: opt.desc,
      image: opt.image,
      feed: this._parseFeed(opt.feed),
      url: opt.url
    }));
    this.shareCallback = function(result){
      if(result.status == 'success'){
        success && success(result);
      }else{
        fail && fail(result);
      }
    };
    this._createIframe(src);
  },
  getUA: function(opt) {
    var success = opt && opt.success;
    var appVersion = navigator.userAgent.match(/MApi\s[\w\.]+\s\([\w\.\d]+\s([\d\.]+)/)[1];
    var ua = {
      platform: 'dpapp',
      appName: 'dianping',
      appVersion: appVersion,
      osName: this._osUA.name,
      osVersion: this._osUA.version
    };
    success && success(ua);
    return ua;
  },
  ready: function(callback) {
    this._isReady = true;
    callback();
  },
  uploadImage: function(opts) {
    var fail = opts.fail;
    var handle = opts.handle;

    this._sendMessage('uploadImage', opts, function(result) {
      var status = result.status;
      if (status == 'fail') {
        fail && fail(result);
        return;
      } else {
        handle && handle(result);
      }
    });
  },
  ajax: function(args) {
    args = this._sanitizeAjaxOpts(args);
    var _success = args.success;
    args.success = function(e) {
      var result = JSON.parse(e.mapiResult);
      result = this._transModel(args.keys, result);
      _success(result);
    };

    this._send('mapi', args);
  },
  getCX: util.actionMapping('getCX'),
  getContactList: util.actionMapping('getContactList'),
  getRequestId: util.actionMapping('getRequestId'),
  closeWindow: util.actionMapping('close_web'),
  getUserInfo: util.actionMapping('getUserInfo'),
  getCity: util.actionMapping('getCityId'),
  getCityId: util.actionMapping('getCityId'),
  getLocation: util.actionMapping('getLocation')
};