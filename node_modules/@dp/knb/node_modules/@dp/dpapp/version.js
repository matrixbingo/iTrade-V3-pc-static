var fs = require('fs');

/*
  根据dpapp cortex版本
  自动升级DPApp.__version__
  同步npm package.json版本  
 */

fs.readFile('./cortex.json',function(err,data){
  if (err) return;

  var cortexConfig;
  try{
    cortexConfig = JSON.parse(data);
  }catch(e){
    console.log('parse cortex.json failed');
  }

  if (cortexConfig) {
    var str = 'module.exports = (' + JSON.stringify(cortexConfig.version) + ');';
    fs.writeFile('./lib/version.js',str, function(err) {
      if (err) {
        console.log('write version file failed');
      }
    });

    var file = './package.json';
    fs.readFile(file,function(err,data) {
      if (err) return;
      var npmConfig;
      try{
        npmConfig = JSON.parse(data);
      }catch(e){
        console.log('parse package.json failed');
      }
      if (npmConfig) {
        npmConfig.version = cortexConfig.version;
      }
      fs.writeFile(file, JSON.stringify(npmConfig,null,4), function(err) {
        if (err) {
          console.log('write version file failed');
        }
      });
    })
  } 
});