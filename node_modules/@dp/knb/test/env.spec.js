var getENV = require('../env').getENV;
var assert = require('assert');

var cases = [
  // Meituan mixed HBNB & MTNB
  {
    name: 'Meituan mixed HBNB & MTNB',
    ua: 'Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_5 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13G36 KNB/1.0.0 iOS/9.3.5 meituangroup/7.2.0 HBNB/1.0.0',
    global: {
    },
    output: {
      isHBNB: true
    }
  },
  // Meituan mixed HBNB & MTNB & Titans
  {
    name: 'Meituan mixed HBNB & MTNB & Titans - Titans',
    ua: 'Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_5 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13G36 TitansX/1.0.0 KNB/1.0.0 iOS/9.3.5 meituangroup/7.2.0 HBNB/1.0.0 ',
    global: {
      _TitansX: {}
    },
    output: {
      isTitans: true
    }
  },
  // Meituan mixed HBNB & MTNB & Titans
  {
    name: 'Meituan mixed HBNB & MTNB & Titans - MTNB',
    ua: 'Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_5 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13G36 TitansX/1.0.0 KNB/1.0.0 iOS/9.3.5 meituangroup/7.2.0 HBNB/1.0.0 HBNB/1.0.0',
    global: {
      _MTNB: {}
    },
    output: {
      isMTNB: true
    }
  },

  ]

describe('env', function () {
  cases.forEach(function (caze, i) {
    it('should pass #' + (caze.name || i), function () {
      global.navigator = {
        userAgent: caze.ua
      };
      global.window = caze.global;
      global.location = caze.url ? require('url').parse(caze.url) : {href: '', search: ''};
      pEqual(getENV(), caze.output);
    });
  });
});

function pEqual(a/*output*/, b/*expect*/) {
  Object.keys(b).filter(k => b[k]).forEach(k => assert.equal(a[k], b[k], k + ' should be ' + b[k]));
}
